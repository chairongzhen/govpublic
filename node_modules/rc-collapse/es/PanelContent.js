import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";

/* eslint-disable no-underscore-dangle */

/* eslint-disable react/prop-types */
import * as React from 'react';
import classnames from 'classnames';
import shallowEqual from 'shallowequal';

var PanelContent = /*#__PURE__*/function (_React$Component) {
  _inherits(PanelContent, _React$Component);

  var _super = _createSuper(PanelContent);

  function PanelContent() {
    _classCallCheck(this, PanelContent);

    return _super.apply(this, arguments);
  }

  _createClass(PanelContent, [{
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps) {
      return this.props.forceRender || !shallowEqual(this.props, nextProps);
    }
  }, {
    key: "render",
    value: function render() {
      var _classnames;

      this._isActived = this.props.forceRender || this._isActived || this.props.isActive;

      if (!this._isActived) {
        return null;
      }

      var _this$props = this.props,
          prefixCls = _this$props.prefixCls,
          isActive = _this$props.isActive,
          children = _this$props.children,
          destroyInactivePanel = _this$props.destroyInactivePanel,
          forceRender = _this$props.forceRender,
          role = _this$props.role;
      var contentCls = classnames("".concat(prefixCls, "-content"), (_classnames = {}, _defineProperty(_classnames, "".concat(prefixCls, "-content-active"), isActive), _defineProperty(_classnames, "".concat(prefixCls, "-content-inactive"), !isActive), _classnames));
      var child = !forceRender && !isActive && destroyInactivePanel ? null : React.createElement("div", {
        className: "".concat(prefixCls, "-content-box")
      }, children);
      return React.createElement("div", {
        className: contentCls,
        role: role
      }, child);
    }
  }]);

  return PanelContent;
}(React.Component);

export default PanelContent;