{"version":3,"sources":["menu/index.jsx"],"names":["React","PropTypes","classNames","RcMenu","Divider","ItemGroup","DownO","animation","warning","SubMenu","Item","placements","Menu","props","inlineOpenKeys","handleClick","e","handleOpenChange","onClick","openKeys","setOpenKeys","onOpenChange","mode","defaultOpenKeys","state","theme","size","inlineCollapsed","getInlineCollapsed","rootTheme","rootSize","rootMode","getRealMenuMode","nextProps","nextContext","switchModeFromInline","siderCollapsed","context","length","setState","undefined","menuMode","openAnimation","openTransitionName","menuOpenAnimation","leave","node","done","prefixCls","className","getMenuOpenAnimation","menuClassName","menuProps","Component","defaultProps","inlineIndent","builtinPlacements","childContextTypes","bool","string","contextTypes"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport RcMenu, { Divider, ItemGroup } from 'rc-menu';\nimport DownO from '@wind/icons/lib/icons/DownO';\nimport animation from '../_util/openAnimation';\nimport warning from '../_util/warning';\nimport SubMenu from './SubMenu';\nimport Item from './MenuItem';\nimport placements from './placements';\nexport default class Menu extends React.Component {\n    constructor(props) {\n        super(props);\n        this.inlineOpenKeys = [];\n        this.handleClick = (e) => {\n            this.handleOpenChange([]);\n            const { onClick } = this.props;\n            if (onClick) {\n                onClick(e);\n            }\n        };\n        this.handleOpenChange = (openKeys) => {\n            this.setOpenKeys(openKeys);\n            const { onOpenChange } = this.props;\n            if (onOpenChange) {\n                onOpenChange(openKeys);\n            }\n        };\n        warning(!('onOpen' in props || 'onClose' in props), '`onOpen` and `onClose` are removed, please use `onOpenChange` instead.');\n        warning(!('inlineCollapsed' in props && props.mode !== 'inline'), '`inlineCollapsed` should only be used when Menu\\'s `mode` is inline.');\n        let openKeys;\n        if ('defaultOpenKeys' in props) {\n            openKeys = props.defaultOpenKeys;\n        }\n        else if ('openKeys' in props) {\n            openKeys = props.openKeys;\n        }\n        this.state = {\n            openKeys: openKeys || [],\n        };\n    }\n    getChildContext() {\n        const { theme, size } = this.props;\n        return {\n            inlineCollapsed: this.getInlineCollapsed(),\n            rootTheme: theme,\n            rootSize: size,\n            rootMode: this.getRealMenuMode()\n        };\n    }\n    componentWillReceiveProps(nextProps, nextContext) {\n        if (this.props.mode === 'inline' &&\n            nextProps.mode !== 'inline') {\n            this.switchModeFromInline = true;\n        }\n        if ((nextProps.inlineCollapsed && !this.props.inlineCollapsed) ||\n            (nextContext.siderCollapsed && !this.context.siderCollapsed)) {\n            this.switchModeFromInline = !!this.state.openKeys.length;\n            this.inlineOpenKeys = this.state.openKeys;\n            this.handleOpenChange([]);\n        }\n        if ((!nextProps.inlineCollapsed && this.props.inlineCollapsed) ||\n            (!nextContext.siderCollapsed && this.context.siderCollapsed)) {\n            this.handleOpenChange(this.inlineOpenKeys);\n            this.inlineOpenKeys = [];\n        }\n        if ('openKeys' in nextProps) {\n            this.setState({ openKeys: nextProps.openKeys });\n        }\n    }\n    setOpenKeys(openKeys) {\n        if (!('openKeys' in this.props)) {\n            this.setState({ openKeys });\n        }\n    }\n    getRealMenuMode() {\n        const inlineCollapsed = this.getInlineCollapsed();\n        if (this.switchModeFromInline && inlineCollapsed && !('openKeys' in this.props)) {\n            return 'inline';\n        }\n        const { mode } = this.props;\n        return inlineCollapsed ? 'vertical' : mode;\n    }\n    getInlineCollapsed() {\n        const { inlineCollapsed } = this.props;\n        if (this.context.siderCollapsed !== undefined) {\n            return this.context.siderCollapsed;\n        }\n        return inlineCollapsed;\n    }\n    getMenuOpenAnimation(menuMode) {\n        const { openAnimation, openTransitionName } = this.props;\n        let menuOpenAnimation = openAnimation || openTransitionName;\n        if (openAnimation === undefined && openTransitionName === undefined) {\n            switch (menuMode) {\n                case 'horizontal':\n                    menuOpenAnimation = 'slide-up';\n                    break;\n                case 'vertical':\n                    // When mode switch from inline\n                    // submenu should hide without animation\n                    if (this.switchModeFromInline) {\n                        menuOpenAnimation = '';\n                        this.switchModeFromInline = false;\n                    }\n                    else {\n                        menuOpenAnimation = 'zoom-big';\n                    }\n                    break;\n                case 'inline':\n                    menuOpenAnimation = Object.assign(Object.assign({}, animation), { leave: (node, done) => animation.leave(node, () => {\n                            // Make sure inline menu leave animation finished before mode is switched\n                            this.switchModeFromInline = false;\n                            this.setState({});\n                            done();\n                        }) });\n                    break;\n                default:\n            }\n        }\n        return menuOpenAnimation;\n    }\n    // switchingModeFromInline 可能是用来替换 switchModeFromInline,这里未移植完全\n    // restoreModeVerticalFromInline = () => {\n    //   const { switchingModeFromInline } = this.state;\n    //   if (switchingModeFromInline) {\n    //     this.setState({\n    //       switchingModeFromInline: false,\n    //     });\n    //   }\n    // }\n    // // Restore vertical mode when menu is collapsed responsively when mounted\n    // // https://github.com/ant-design/ant-design/issues/13104\n    // // TODO: not a perfect solution, looking a new way to avoid setting switchingModeFromInline in this situation\n    // handleMouseEnter = (e: MouseEvent) => {\n    //   this.restoreModeVerticalFromInline();\n    //   const { onMouseEnter } = this.props;\n    //   if (onMouseEnter) {\n    //     onMouseEnter(e);\n    //   }\n    // };\n    // handleTransitionEnd = (e: TransitionEvent) => {\n    //   // when inlineCollapsed menu width animation finished\n    //   // https://github.com/ant-design/ant-design/issues/12864\n    //   const widthCollapsed = e.propertyName === 'width' && e.target === e.currentTarget;\n    //   // Fix SVGElement e.target.className.indexOf is not a function\n    //   // https://github.com/ant-design/ant-design/issues/15699\n    //   const { className } = e.target as HTMLElement | SVGElement;\n    //   // SVGAnimatedString.animVal should be identical to SVGAnimatedString.baseVal, unless during an animation.\n    //   const classNameValue =\n    //     Object.prototype.toString.call(className) === '[object SVGAnimatedString]'\n    //       ? className.animVal\n    //       : className;\n    //   // Fix for <Menu style={{ width: '100%' }} />, the width transition won't trigger when menu is collapsed\n    //   // https://github.com/ant-design/ant-design-pro/issues/2783\n    //   const iconScaled = e.propertyName === 'font-size' && classNameValue.indexOf('anticon') >= 0;\n    //   if (widthCollapsed || iconScaled) {\n    //     this.restoreModeVerticalFromInline();\n    //   }\n    // };\n    render() {\n        const { prefixCls, className, theme, size } = this.props;\n        const menuMode = this.getRealMenuMode();\n        const menuOpenAnimation = this.getMenuOpenAnimation(menuMode);\n        const menuClassName = classNames(className, `${prefixCls}-${theme}`, {\n            [`${prefixCls}-${size}`]: size && size !== 'default',\n            [`${prefixCls}-inline-collapsed`]: this.getInlineCollapsed(),\n        });\n        const menuProps = {\n            openKeys: this.state.openKeys,\n            onOpenChange: this.handleOpenChange,\n            className: menuClassName,\n            mode: menuMode,\n        };\n        if (menuMode !== 'inline') {\n            // closing vertical popup submenu after click it\n            menuProps.onClick = this.handleClick;\n            menuProps.openTransitionName = menuOpenAnimation;\n        }\n        else {\n            menuProps.openAnimation = menuOpenAnimation;\n        }\n        return <RcMenu expandIcon={<DownO className={`${prefixCls}-submenu-arrow`}/>} {...this.props} {...menuProps}/>;\n    }\n}\nMenu.Divider = Divider;\nMenu.Item = Item;\nMenu.SubMenu = SubMenu;\nMenu.ItemGroup = ItemGroup;\nMenu.defaultProps = {\n    prefixCls: 'w-menu',\n    className: '',\n    theme: 'light',\n    inlineIndent: 16,\n    mode: 'inline',\n    size: 'default',\n    /* 默认0.1,太长导致子菜单切换时容易重叠，太短导致菜单容易消失\n       后修改offset为0，利用css实现间距\n       但考虑鼠标有时滑动时会短暂离开菜单，还是需要留有一定时间 */\n    // subMenuCloseDelay: 0.1,\n    // subMenuOpenDelay: 0,\n    builtinPlacements: placements\n};\nMenu.childContextTypes = {\n    inlineCollapsed: PropTypes.bool,\n    rootTheme: PropTypes.string,\n    rootSize: PropTypes.string,\n    rootMode: PropTypes.string,\n};\nMenu.contextTypes = {\n    siderCollapsed: PropTypes.bool,\n};\n"],"file":"index.js"}