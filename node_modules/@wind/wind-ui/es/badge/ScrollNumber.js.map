{"version":3,"sources":["badge/ScrollNumber.jsx"],"names":["React","createElement","Component","omit","classNames","getNumberArray","num","toString","split","reverse","map","i","Number","ScrollNumber","props","state","animateStarted","count","currentDigit","lastDigit","lastCount","nextProps","setState","setTimeout","onAnimated","position","childrenToReturn","currentClassName","push","getPositionByNum","removeTransition","undefined","className","prefixCls","style","transition","msTransform","WebkitTransform","transform","key","renderNumberList","isNaN","renderCurrentNumber","component","restProps","newProps","title","borderColor","boxShadow","renderNumberElement","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { createElement, Component } from 'react';\nimport omit from 'omit.js';\nimport classNames from 'classnames';\nfunction getNumberArray(num) {\n    return num ?\n        num.toString()\n            .split('')\n            .reverse()\n            .map(i => Number(i)) : [];\n}\nexport default class ScrollNumber extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            animateStarted: true,\n            count: props.count,\n        };\n    }\n    getPositionByNum(num, i) {\n        if (this.state.animateStarted) {\n            return 10 + num;\n        }\n        const currentDigit = getNumberArray(this.state.count)[i];\n        const lastDigit = getNumberArray(this.lastCount)[i];\n        // 同方向则在同一侧切换数字\n        if (this.state.count > this.lastCount) {\n            if (currentDigit >= lastDigit) {\n                return 10 + num;\n            }\n            return 20 + num;\n        }\n        if (currentDigit <= lastDigit) {\n            return 10 + num;\n        }\n        return num;\n    }\n    componentWillReceiveProps(nextProps) {\n        if ('count' in nextProps) {\n            if (this.state.count === nextProps.count) {\n                return;\n            }\n            this.lastCount = this.state.count;\n            // 复原数字初始位置\n            this.setState({\n                animateStarted: true,\n            }, () => {\n                // 等待数字位置复原完毕\n                // 开始设置完整的数字\n                setTimeout(() => {\n                    this.setState({\n                        animateStarted: false,\n                        count: nextProps.count,\n                    }, () => {\n                        const onAnimated = this.props.onAnimated;\n                        if (onAnimated) {\n                            onAnimated();\n                        }\n                    });\n                }, 5);\n            });\n        }\n    }\n    renderNumberList(position) {\n        const childrenToReturn = [];\n        for (let i = 0; i < 30; i++) {\n            const currentClassName = (position === i) ? 'current' : '';\n            childrenToReturn.push(<p key={i.toString()} className={currentClassName}>{i % 10}</p>);\n        }\n        return childrenToReturn;\n    }\n    renderCurrentNumber(num, i) {\n        const position = this.getPositionByNum(num, i);\n        const removeTransition = this.state.animateStarted ||\n            (getNumberArray(this.lastCount)[i] === undefined);\n        return createElement('span', {\n            className: `${this.props.prefixCls}-only`,\n            style: {\n                transition: removeTransition && 'none',\n                msTransform: `translateY(${-position * 100}%)`,\n                WebkitTransform: `translateY(${-position * 100}%)`,\n                transform: `translateY(${-position * 100}%)`,\n            },\n            key: i,\n        }, this.renderNumberList(position));\n    }\n    renderNumberElement() {\n        const state = this.state;\n        if (!state.count || isNaN(state.count)) {\n            return state.count;\n        }\n        return getNumberArray(state.count)\n            .map((num, i) => this.renderCurrentNumber(num, i)).reverse();\n    }\n    render() {\n        const { prefixCls, className, style, count, component = 'sup' } = this.props;\n        // fix https://fb.me/react-unknown-prop\n        const restProps = omit(this.props, [\n            'count',\n            'onAnimated',\n            'component',\n            'prefixCls',\n        ]);\n        const newProps = Object.assign(Object.assign({}, restProps), { className: classNames({\n                [`${prefixCls}`]: !!prefixCls,\n                [`${className}`]: !!className,\n            }), title: count });\n        // allow specify the border\n        // mock border-color by box-shadow for compatible with old usage:\n        // <Badge count={4} style={{ backgroundColor: '#fff', color: '#999', borderColor: '#d9d9d9' }} />\n        if (style && style.borderColor) {\n            newProps.style.boxShadow = `0 0 0 1px ${style.borderColor} inset`;\n        }\n        return createElement(component, newProps, this.renderNumberElement());\n    }\n}\nScrollNumber.defaultProps = {\n    prefixCls: 'w-scroll-number',\n    count: null,\n    onAnimated() {\n    },\n};\n"],"file":"ScrollNumber.js"}