{"version":3,"sources":["table/Table.jsx"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","findDOMNode","RcTable","INTERNAL_COL_DEFINE","PropTypes","classNames","FrownO","ArrowUpO","ArrowDownO","RightO","Pagination","Spin","warning","FilterDropdown","createStore","SelectionBox","SelectionCheckboxAll","Column","ColumnGroup","HorizontalTable","flatArray","treeMap","treeForEachLast","flatFilter","normalizeColumns","noop","stopPropagation","nativeEvent","stopImmediatePropagation","DefaultExpandIcon","props","iconNode","prefixCls","expandable","expanded","onExpand","record","defaultLocale","filterTitle","filterConfirm","filterReset","emptyText","selectAll","selectInvert","defaultPagination","onChange","onShowSizeChange","emptyObject","Table","getCheckboxPropsByItem","item","index","rowSelection","getCheckboxProps","key","getRecordKey","CheckboxPropsCache","toggleSortOrder","column","sortDirections","sortOrder","state","newSortOrder","isSortColumn","undefined","methodIndex","newState","sortColumn","getSortOrderColumns","setState","apply","prepareParamsArguments","handleFilterClick","handleFilter","nextFilters","pagination","filters","getColumnKey","currentColumnKeys","columns","c","children","push","keys","forEach","columnKey","current","filtersToSetState","getFilteredValueColumns","col","store","selectionDirty","handleSelect","rowIndex","checked","target","defaultSelection","getState","getDefaultSelection","selectedRowKeys","concat","filter","setSelectedRowKeys","selectWay","handleRadioSelect","handleSelectRow","selectionKey","onSelectFunc","data","getFlatCurrentPageData","changeableRowKeys","disabled","map","changeRowKeys","splice","handlePageChange","otherArguments","renderSelectionBox","type","_","handleChange","rowKey","recordKey","getPopupContainer","handleShowSizeChange","pageSize","nextPagination","getDefaultSortOrder","getFiltersFromColumns","getDefaultPagination","getFlatData","defaultChecked","hasPagination","defaultCurrent","defaultPageSize","locale","context","antLocale","nextProps","previousState","newPagination","dataSource","sortState","getSortStateFromColumns","filteredValueColumns","filtersFromColumns","newFilters","isFiltersChanged","selectedRows","row","onSelect","onSelectAll","changeRows","onSelectInvert","filtersChanged","filteredValue","definedSortState","defaultSortedColumn","defaultSortOrder","sortedColumn","sorter","a","b","result","selectionColumnClass","selections","selectionColumn","render","className","checkboxAllDisabled","every","title","getLocale","some","fixed","unshift","dataIndex","total","Math","floor","dropdownPrefixCls","originColumn","filterDropdown","sortButton","colFilters","isAscend","isDescend","size","getLocalData","getMaxCurrent","order","field","myKey","Number","MAX_VALUE","getCurrentPageData","sorterFn","childrenColumnName","sort","recursiveSort","slice","getSorterFn","findColumn","values","onFilter","v","_a","style","showHeader","striped","rowClassName","expandedRowKeys","expandedRowRender","expandIcon","defaultExpandedRowKeys","restProps","renderRowSelection","bordered","classString","finalRowClassName","stripedClass","renderColumnsDropdown","newColumn","align","headerAlign","pre","cLen","expandIconColumnIndex","table","paginationPatchClass","loading","spinning","renderPagination","Component","propTypes","array","string","useFixedHeader","bool","object","oneOfType","func","defaultProps","indentSize","contextTypes"],"mappings":"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","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport RcTable, { INTERNAL_COL_DEFINE } from 'rc-table';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FrownO from '@wind/icons/lib/icons/FrownO';\nimport ArrowUpO from '@wind/icons/lib/icons/ArrowUpO';\nimport ArrowDownO from '@wind/icons/lib/icons/ArrowDownO';\nimport RightO from '@wind/icons/lib/icons/RightO';\n// import UpO from '@wind/icons/lib/icons/UpO';\n// import classNamesDedupe from 'classnames/dedupe';\nimport Pagination from '../pagination';\nimport Spin from '../spin';\nimport warning from '../_util/warning';\nimport FilterDropdown from './filterDropdown';\nimport createStore from './createStore';\nimport SelectionBox from './SelectionBox';\nimport SelectionCheckboxAll from './SelectionCheckboxAll';\nimport Column from './Column';\nimport ColumnGroup from './ColumnGroup';\nimport HorizontalTable from './HorizontalTable';\nimport { flatArray, treeMap, treeForEachLast, flatFilter, normalizeColumns } from './util';\nfunction noop() {\n}\nfunction stopPropagation(e) {\n    e.stopPropagation();\n    if (e.nativeEvent.stopImmediatePropagation) {\n        e.nativeEvent.stopImmediatePropagation();\n    }\n}\nfunction DefaultExpandIcon(props) {\n    let iconNode;\n    const { prefixCls } = props;\n    if (props.expandable) {\n        iconNode = <RightO className={`${prefixCls}-row-expand-icon ${prefixCls}-row-expand-icon-${props.expanded ? 'expanded' : 'collapsed'}`} onClick={e => { props.onExpand(props.record, e); }}/>;\n    }\n    return iconNode;\n}\nconst defaultLocale = {\n    filterTitle: '筛选',\n    filterConfirm: '确定',\n    filterReset: '重置',\n    emptyText: <span><FrownO />暂无数据</span>,\n    selectAll: '全选当页',\n    selectInvert: '反选当页',\n};\nconst defaultPagination = {\n    onChange: noop,\n    onShowSizeChange: noop,\n};\n/**\n * Avoid creating new object, so that parent component's shouldComponentUpdate\n * can works appropriately。\n */\nconst emptyObject = {};\nexport default class Table extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getCheckboxPropsByItem = (item, index) => {\n            const { rowSelection = {} } = this.props;\n            if (!rowSelection.getCheckboxProps) {\n                return {};\n            }\n            const key = this.getRecordKey(item, index);\n            // Cache checkboxProps\n            if (!this.CheckboxPropsCache[key]) {\n                this.CheckboxPropsCache[key] = rowSelection.getCheckboxProps(item);\n            }\n            return this.CheckboxPropsCache[key];\n        };\n        this.toggleSortOrder = (column) => {\n            // console.log('toggleSortOrder',classList, event.target)\n            const sortDirections = column.sortDirections || this.props.sortDirections;\n            const { sortOrder } = this.state;\n            // 只同时允许一列进行排序，否则会导致排序顺序的逻辑问题\n            let newSortOrder;\n            let isSortColumn = this.isSortColumn(column);\n            if (!isSortColumn && sortOrder !== undefined) { // 当前列未排序\n                newSortOrder = sortDirections[0];\n            }\n            else { // 当前列已排序\n                const methodIndex = sortDirections.indexOf(sortOrder) + 1;\n                newSortOrder =\n                    methodIndex === sortDirections.length ? sortDirections[0] : sortDirections[methodIndex];\n            }\n            const newState = {\n                sortOrder: newSortOrder,\n                sortColumn: newSortOrder ? column : null,\n            };\n            // Controlled\n            if (this.getSortOrderColumns().length === 0) {\n                this.setState(newState);\n            }\n            const onChange = this.props.onChange;\n            if (onChange) {\n                onChange.apply(null, this.prepareParamsArguments(Object.assign(Object.assign({}, this.state), newState)));\n            }\n        };\n        this.handleFilterClick = (e) => {\n            e.stopPropagation(); // 拦截点击filter面板触发的点击事件\n        };\n        this.handleFilter = (column, nextFilters) => {\n            const props = this.props;\n            let pagination = Object.assign({}, this.state.pagination);\n            const filters = Object.assign(Object.assign({}, this.state.filters), { [this.getColumnKey(column)]: nextFilters });\n            // Remove filters not in current columns\n            const currentColumnKeys = [];\n            treeMap(this.columns, c => {\n                if (!c.children) {\n                    currentColumnKeys.push(this.getColumnKey(c));\n                }\n            });\n            Object.keys(filters).forEach((columnKey) => {\n                if (currentColumnKeys.indexOf(columnKey) < 0) {\n                    delete filters[columnKey];\n                }\n            });\n            if (props.pagination) {\n                // Reset current prop\n                pagination.current = 1;\n                pagination.onChange(pagination.current);\n            }\n            const newState = {\n                pagination,\n                filters: {},\n            };\n            const filtersToSetState = Object.assign({}, filters);\n            // Remove filters which is controlled\n            this.getFilteredValueColumns().forEach(col => {\n                const columnKey = this.getColumnKey(col);\n                if (columnKey) {\n                    delete filtersToSetState[columnKey];\n                }\n            });\n            if (Object.keys(filtersToSetState).length > 0) {\n                newState.filters = filtersToSetState;\n            }\n            // Controlled current prop will not respond user interaction\n            if (typeof props.pagination === 'object' && 'current' in props.pagination) {\n                newState.pagination = Object.assign(Object.assign({}, pagination), { current: this.state.pagination.current });\n            }\n            this.setState(newState, () => {\n                this.store.setState({\n                    selectionDirty: false,\n                });\n                const onChange = this.props.onChange;\n                if (onChange) {\n                    onChange.apply(null, this.prepareParamsArguments(Object.assign(Object.assign({}, this.state), { selectionDirty: false, filters,\n                        pagination })));\n                }\n            });\n        };\n        this.handleSelect = (record, rowIndex, e) => {\n            const checked = e.target.checked;\n            const defaultSelection = this.store.getState().selectionDirty ? [] : this.getDefaultSelection();\n            let selectedRowKeys = this.store.getState().selectedRowKeys.concat(defaultSelection);\n            let key = this.getRecordKey(record, rowIndex);\n            if (checked) {\n                selectedRowKeys.push(this.getRecordKey(record, rowIndex));\n            }\n            else {\n                selectedRowKeys = selectedRowKeys.filter((i) => key !== i);\n            }\n            this.store.setState({\n                selectionDirty: true,\n            });\n            this.setSelectedRowKeys(selectedRowKeys, {\n                selectWay: 'onSelect',\n                record,\n                checked,\n            });\n        };\n        this.handleRadioSelect = (record, rowIndex, e) => {\n            const checked = e.target.checked;\n            const defaultSelection = this.store.getState().selectionDirty ? [] : this.getDefaultSelection();\n            let selectedRowKeys = this.store.getState().selectedRowKeys.concat(defaultSelection);\n            let key = this.getRecordKey(record, rowIndex);\n            selectedRowKeys = [key];\n            this.store.setState({\n                selectionDirty: true,\n            });\n            this.setSelectedRowKeys(selectedRowKeys, {\n                selectWay: 'onSelect',\n                record,\n                checked,\n            });\n        };\n        this.handleSelectRow = (selectionKey, index, onSelectFunc) => {\n            const data = this.getFlatCurrentPageData();\n            const defaultSelection = this.store.getState().selectionDirty ? [] : this.getDefaultSelection();\n            const selectedRowKeys = this.store.getState().selectedRowKeys.concat(defaultSelection);\n            const changeableRowKeys = data\n                .filter((item, i) => !this.getCheckboxPropsByItem(item, i).disabled)\n                .map((item, i) => this.getRecordKey(item, i));\n            let changeRowKeys = [];\n            let selectWay = '';\n            let checked;\n            // handle default selection\n            switch (selectionKey) {\n                case 'all':\n                    changeableRowKeys.forEach(key => {\n                        if (selectedRowKeys.indexOf(key) < 0) {\n                            selectedRowKeys.push(key);\n                            changeRowKeys.push(key);\n                        }\n                    });\n                    selectWay = 'onSelectAll';\n                    checked = true;\n                    break;\n                case 'removeAll':\n                    changeableRowKeys.forEach(key => {\n                        if (selectedRowKeys.indexOf(key) >= 0) {\n                            selectedRowKeys.splice(selectedRowKeys.indexOf(key), 1);\n                            changeRowKeys.push(key);\n                        }\n                    });\n                    selectWay = 'onSelectAll';\n                    checked = false;\n                    break;\n                case 'invert':\n                    changeableRowKeys.forEach(key => {\n                        if (selectedRowKeys.indexOf(key) < 0) {\n                            selectedRowKeys.push(key);\n                        }\n                        else {\n                            selectedRowKeys.splice(selectedRowKeys.indexOf(key), 1);\n                        }\n                        changeRowKeys.push(key);\n                        selectWay = 'onSelectInvert';\n                    });\n                    break;\n                default:\n                    break;\n            }\n            this.store.setState({\n                selectionDirty: true,\n            });\n            // when select custom selection, callback selections[n].onSelect\n            if (index > 1 && typeof onSelectFunc === 'function') {\n                return onSelectFunc(changeableRowKeys);\n            }\n            this.setSelectedRowKeys(selectedRowKeys, {\n                selectWay: selectWay,\n                checked,\n                changeRowKeys,\n            });\n        };\n        this.handlePageChange = (current, ...otherArguments) => {\n            const props = this.props;\n            let pagination = Object.assign({}, this.state.pagination);\n            if (current) {\n                pagination.current = current;\n            }\n            else {\n                pagination.current = pagination.current || 1;\n            }\n            pagination.onChange(pagination.current, ...otherArguments);\n            const newState = {\n                pagination,\n            };\n            // Controlled current prop will not respond user interaction\n            if (props.pagination &&\n                typeof props.pagination === 'object' &&\n                'current' in props.pagination) {\n                newState.pagination = Object.assign(Object.assign({}, pagination), { current: this.state.pagination.current });\n            }\n            this.setState(newState);\n            this.store.setState({\n                selectionDirty: false,\n            });\n            const onChange = this.props.onChange;\n            if (onChange) {\n                onChange.apply(null, this.prepareParamsArguments(Object.assign(Object.assign({}, this.state), { selectionDirty: false, pagination })));\n            }\n        };\n        this.renderSelectionBox = (type) => {\n            return (_, record, index) => {\n                let rowIndex = this.getRecordKey(record, index); // 从 1 开始\n                const props = this.getCheckboxPropsByItem(record, index);\n                const handleChange = (e) => {\n                    type === 'radio' ? this.handleRadioSelect(record, rowIndex, e) :\n                        this.handleSelect(record, rowIndex, e);\n                };\n                return (<span onClick={stopPropagation}>\n          <SelectionBox type={type} store={this.store} rowIndex={rowIndex} disabled={props.disabled} onChange={handleChange} defaultSelection={this.getDefaultSelection()}/>\n        </span>);\n            };\n        };\n        this.getRecordKey = (record, index) => {\n            const rowKey = this.props.rowKey;\n            const recordKey = (typeof rowKey === 'function') ?\n                rowKey(record, index) : record[rowKey];\n            warning(recordKey !== undefined, 'Each record in dataSource of table should have a unique `key` prop, or set `rowKey` to an unique primary key,' +\n                'see https://u.ant.design/table-row-key');\n            return recordKey === undefined ? index : recordKey;\n        };\n        this.getPopupContainer = () => {\n            return findDOMNode(this);\n        };\n        this.handleShowSizeChange = (current, pageSize) => {\n            const pagination = this.state.pagination;\n            pagination.onShowSizeChange(current, pageSize);\n            const nextPagination = Object.assign(Object.assign({}, pagination), { pageSize,\n                current });\n            this.setState({ pagination: nextPagination });\n            const onChange = this.props.onChange;\n            if (onChange) {\n                onChange.apply(null, this.prepareParamsArguments(Object.assign(Object.assign({}, this.state), { pagination: nextPagination })));\n            }\n        };\n        warning(!('columnsPageRange' in props || 'columnsPageSize' in props), '`columnsPageRange` and `columnsPageSize` are removed, please use ' +\n            'fixed columns instead, see: https://u.ant.design/fixed-columns.');\n        this.columns = props.columns || normalizeColumns(props.children);\n        this.state = Object.assign(Object.assign({}, this.getDefaultSortOrder(this.columns)), { \n            // 减少状态\n            filters: this.getFiltersFromColumns(), pagination: this.getDefaultPagination(props) });\n        this.CheckboxPropsCache = {};\n        this.store = createStore({\n            selectedRowKeys: (props.rowSelection || {}).selectedRowKeys || [],\n            selectionDirty: false,\n        });\n    }\n    getDefaultSelection() {\n        const { rowSelection = {} } = this.props;\n        if (!rowSelection.getCheckboxProps) {\n            return [];\n        }\n        return this.getFlatData()\n            .filter((item, rowIndex) => this.getCheckboxPropsByItem(item, rowIndex).defaultChecked)\n            .map((record, rowIndex) => this.getRecordKey(record, rowIndex));\n    }\n    getDefaultPagination(props) {\n        const pagination = props.pagination || {};\n        return this.hasPagination(props) ? Object.assign(Object.assign(Object.assign({}, defaultPagination), pagination), { current: pagination.defaultCurrent || pagination.current || 1, pageSize: pagination.defaultPageSize || pagination.pageSize || 10 }) : {};\n    }\n    getLocale() {\n        let locale = {};\n        if (this.context.antLocale && this.context.antLocale.Table) {\n            locale = this.context.antLocale.Table;\n        }\n        return Object.assign(Object.assign(Object.assign({}, defaultLocale), locale), this.props.locale);\n    }\n    componentWillReceiveProps(nextProps) {\n        this.columns = nextProps.columns || normalizeColumns(nextProps.children);\n        if ('pagination' in nextProps || 'pagination' in this.props) {\n            this.setState(previousState => {\n                const newPagination = Object.assign(Object.assign(Object.assign({}, defaultPagination), previousState.pagination), nextProps.pagination);\n                newPagination.current = newPagination.current || 1;\n                newPagination.pageSize = newPagination.pageSize || 10;\n                return { pagination: nextProps.pagination !== false ? newPagination : emptyObject };\n            });\n        }\n        if (nextProps.rowSelection &&\n            'selectedRowKeys' in nextProps.rowSelection) {\n            this.store.setState({\n                selectedRowKeys: nextProps.rowSelection.selectedRowKeys || [],\n            });\n            const { rowSelection } = this.props;\n            if (rowSelection && (nextProps.rowSelection.getCheckboxProps !== rowSelection.getCheckboxProps)) {\n                this.CheckboxPropsCache = {};\n            }\n        }\n        if ('dataSource' in nextProps &&\n            nextProps.dataSource !== this.props.dataSource) {\n            this.store.setState({\n                selectionDirty: false,\n            });\n            this.CheckboxPropsCache = {};\n        }\n        if (this.getSortOrderColumns(this.columns).length > 0) {\n            const sortState = this.getSortStateFromColumns(this.columns);\n            if (sortState.sortColumn !== this.state.sortColumn ||\n                sortState.sortOrder !== this.state.sortOrder) {\n                this.setState(sortState);\n            }\n        }\n        const filteredValueColumns = this.getFilteredValueColumns(this.columns);\n        if (filteredValueColumns.length > 0) {\n            const filtersFromColumns = this.getFiltersFromColumns(this.columns);\n            const newFilters = Object.assign({}, this.state.filters);\n            Object.keys(filtersFromColumns).forEach(key => {\n                newFilters[key] = filtersFromColumns[key];\n            });\n            if (this.isFiltersChanged(newFilters)) {\n                this.setState({ filters: newFilters });\n            }\n        }\n    }\n    setSelectedRowKeys(selectedRowKeys, { selectWay, record, checked, changeRowKeys }) {\n        const { rowSelection = {} } = this.props;\n        if (rowSelection && !('selectedRowKeys' in rowSelection)) {\n            this.store.setState({ selectedRowKeys });\n        }\n        const data = this.getFlatData();\n        if (!rowSelection.onChange && !rowSelection[selectWay]) {\n            return;\n        }\n        const selectedRows = data.filter((row, i) => selectedRowKeys.indexOf(this.getRecordKey(row, i)) >= 0);\n        if (rowSelection.onChange) {\n            rowSelection.onChange(selectedRowKeys, selectedRows);\n        }\n        if (selectWay === 'onSelect' && rowSelection.onSelect) {\n            rowSelection.onSelect(record, checked, selectedRows);\n        }\n        else if (selectWay === 'onSelectAll' && rowSelection.onSelectAll) {\n            const changeRows = data.filter((row, i) => changeRowKeys.indexOf(this.getRecordKey(row, i)) >= 0);\n            rowSelection.onSelectAll(checked, selectedRows, changeRows);\n        }\n        else if (selectWay === 'onSelectInvert' && rowSelection.onSelectInvert) {\n            rowSelection.onSelectInvert(selectedRowKeys);\n        }\n    }\n    hasPagination(props) {\n        return (props || this.props).pagination !== false;\n    }\n    isFiltersChanged(filters) {\n        let filtersChanged = false;\n        if (Object.keys(filters).length !== Object.keys(this.state.filters).length) {\n            filtersChanged = true;\n        }\n        else {\n            Object.keys(filters).forEach(columnKey => {\n                if (filters[columnKey] !== this.state.filters[columnKey]) {\n                    filtersChanged = true;\n                }\n            });\n        }\n        return filtersChanged;\n    }\n    getSortOrderColumns(columns) {\n        return flatFilter(columns || this.columns || [], column => 'sortOrder' in column);\n    }\n    getFilteredValueColumns(columns) {\n        return flatFilter(columns || this.columns || [], column => typeof column.filteredValue !== 'undefined');\n    }\n    getFiltersFromColumns(columns) {\n        let filters = {};\n        this.getFilteredValueColumns(columns).forEach(col => {\n            filters[this.getColumnKey(col)] = col.filteredValue;\n        });\n        return filters;\n    }\n    getDefaultSortOrder(columns) {\n        const definedSortState = this.getSortStateFromColumns(columns);\n        const defaultSortedColumn = flatFilter(columns || [], (column) => column.defaultSortOrder != null)[0];\n        if (defaultSortedColumn && !definedSortState.sortColumn) {\n            return {\n                sortColumn: defaultSortedColumn,\n                sortOrder: defaultSortedColumn.defaultSortOrder,\n            };\n        }\n        return definedSortState;\n    }\n    getSortStateFromColumns(columns) {\n        // return fisrt column which sortOrder is not falsy\n        const sortedColumn = this.getSortOrderColumns(columns).filter(col => col.sortOrder)[0];\n        if (sortedColumn) {\n            return {\n                sortColumn: sortedColumn,\n                sortOrder: sortedColumn.sortOrder,\n            };\n        }\n        return {\n            sortColumn: null,\n            sortOrder: null,\n        };\n    }\n    getSorterFn() {\n        const { sortOrder, sortColumn } = this.state;\n        if (!sortOrder || !sortColumn ||\n            typeof sortColumn.sorter !== 'function') {\n            return;\n        }\n        return (a, b) => {\n            const result = sortColumn.sorter(a, b);\n            if (result !== 0) {\n                return (sortOrder === 'descend') ? -result : result;\n            }\n            return 0;\n        };\n    }\n    renderRowSelection() {\n        const { prefixCls, rowSelection } = this.props;\n        const columns = this.columns.concat();\n        if (rowSelection) {\n            const data = this.getFlatCurrentPageData().filter((item, index) => {\n                if (rowSelection.getCheckboxProps) {\n                    return !this.getCheckboxPropsByItem(item, index).disabled;\n                }\n                return true;\n            });\n            let selectionColumnClass = classNames(`${prefixCls}-selection-column`, {\n                [`${prefixCls}-selection-column-custom`]: rowSelection.selections,\n            });\n            const selectionColumn = {\n                key: 'selection-column',\n                render: this.renderSelectionBox(rowSelection.type),\n                className: selectionColumnClass,\n                [INTERNAL_COL_DEFINE]: {\n                    className: `${prefixCls}-selection-col`,\n                },\n            };\n            if (rowSelection.type !== 'radio') {\n                const checkboxAllDisabled = data.every((item, index) => this.getCheckboxPropsByItem(item, index).disabled);\n                selectionColumn.title = (<SelectionCheckboxAll store={this.store} locale={this.getLocale()} data={data} getCheckboxPropsByItem={this.getCheckboxPropsByItem} getRecordKey={this.getRecordKey} disabled={checkboxAllDisabled} prefixCls={prefixCls} onSelect={this.handleSelectRow} selections={rowSelection.selections} getPopupContainer={this.getPopupContainer}/>);\n            }\n            if (columns.some(column => column.fixed === 'left' || column.fixed === true)) {\n                selectionColumn.fixed = 'left';\n            }\n            if (columns[0] && columns[0].key === 'selection-column') {\n                columns[0] = selectionColumn;\n            }\n            else {\n                columns.unshift(selectionColumn);\n            }\n        }\n        return columns;\n    }\n    getColumnKey(column, index) {\n        return column.key || column.dataIndex || index;\n    }\n    getMaxCurrent(total) {\n        const { current, pageSize } = this.state.pagination;\n        if ((current - 1) * pageSize >= total) {\n            return Math.floor((total - 1) / pageSize) + 1;\n        }\n        return current;\n    }\n    isSortColumn(column) {\n        const { sortColumn } = this.state;\n        if (!column || !sortColumn) {\n            return false;\n        }\n        return this.getColumnKey(sortColumn) === this.getColumnKey(column);\n    }\n    renderColumnsDropdown(columns) {\n        const { prefixCls, dropdownPrefixCls } = this.props;\n        const { sortOrder } = this.state;\n        const locale = this.getLocale();\n        return treeMap(columns, (originColumn, i) => {\n            let column = Object.assign({}, originColumn);\n            let key = this.getColumnKey(column, i);\n            let filterDropdown;\n            let sortButton;\n            if ((column.filters && column.filters.length > 0) || column.filterDropdown) {\n                let colFilters = this.state.filters[key] || [];\n                filterDropdown = (<FilterDropdown locale={locale} column={column} selectedKeys={colFilters} confirmFilter={this.handleFilter} prefixCls={`${prefixCls}-filter`} dropdownPrefixCls={dropdownPrefixCls || 'w-dropdown'} getPopupContainer={this.getPopupContainer}/>);\n            }\n            let isAscend = false;\n            let isDescend = false;\n            if (column.sorter) {\n                let isSortColumn = this.isSortColumn(column);\n                if (isSortColumn) {\n                    column.className = column.className || '';\n                    if (sortOrder) {\n                        column.className += ` ${prefixCls}-column-sort`;\n                    }\n                }\n                isAscend = isSortColumn && sortOrder === 'ascend';\n                isDescend = isSortColumn && sortOrder === 'descend';\n                sortButton = (isAscend ? <span className={`${prefixCls}-column-sorter-icon ${prefixCls}-column-sorter-up`} title=\"↑\"><ArrowUpO />\n          </span> : (isDescend ? <span className={`${prefixCls}-column-sorter-icon ${prefixCls}-column-sorter-down`} title=\"↓\">\n            <ArrowDownO />\n          </span> : null));\n            }\n            // filterDropdown放在sorter-handler中会异常触发onClick，猜测是rc-trigger(rc-dropdown)问题,升级后并未解决\n            // 目前使用handleFilterClick拦截\n            column.title = (<div className={column.sorter ? `${prefixCls}-column-sorter-handler` : undefined} onClick={column.sorter ? () => this.toggleSortOrder(column) : undefined}>\n            {sortButton}\n            {column.title}\n            <span onClick={this.handleFilterClick}>{filterDropdown}</span>\n          </div>);\n            return column;\n        });\n    }\n    renderPagination() {\n        // 强制不需要分页\n        if (!this.hasPagination()) {\n            return null;\n        }\n        let size = 'default';\n        const { pagination } = this.state;\n        if (pagination.size) {\n            size = pagination.size;\n        }\n        else if (this.props.size === 'middle' || this.props.size === 'small') {\n            size = 'small';\n        }\n        let total = pagination.total || this.getLocalData().length;\n        return (total > 0) ? (<Pagination key=\"pagination\" {...pagination} className={classNames(pagination.className, `${this.props.prefixCls}-pagination`)} onChange={this.handlePageChange} total={total} size={size} current={this.getMaxCurrent(total)} onShowSizeChange={this.handleShowSizeChange}/>) : null;\n    }\n    // Get pagination, filters, sorter\n    prepareParamsArguments(state) {\n        const pagination = Object.assign({}, state.pagination);\n        // remove useless handle function in Table.onChange\n        delete pagination.onChange;\n        delete pagination.onShowSizeChange;\n        const filters = state.filters;\n        const sorter = {};\n        if (state.sortColumn && state.sortOrder) {\n            sorter.column = state.sortColumn;\n            sorter.order = state.sortOrder;\n            sorter.field = state.sortColumn.dataIndex;\n            sorter.columnKey = this.getColumnKey(state.sortColumn);\n        }\n        return [pagination, filters, sorter];\n    }\n    findColumn(myKey) {\n        let column;\n        treeMap(this.columns, c => {\n            if (this.getColumnKey(c) === myKey) {\n                column = c;\n            }\n        });\n        return column;\n    }\n    getCurrentPageData() {\n        let data = this.getLocalData();\n        // console.log('getCurrentPageData',data)\n        let current;\n        let pageSize;\n        let state = this.state;\n        // 如果没有分页的话，默认全部展示\n        if (!this.hasPagination()) {\n            pageSize = Number.MAX_VALUE;\n            current = 1;\n        }\n        else {\n            pageSize = state.pagination.pageSize;\n            current = this.getMaxCurrent(state.pagination.total || data.length);\n        }\n        // 分页\n        // ---\n        // 当数据量少于等于每页数量时，直接设置数据\n        // 否则进行读取分页数据\n        // pageSize === Number.MAX_VALUE的时候为啥还要计算?\n        if (data.length > pageSize) {\n            data = data.filter((_, i) => {\n                return i >= (current - 1) * pageSize && i < current * pageSize;\n            });\n        }\n        return data;\n    }\n    getFlatData() {\n        return flatArray(this.getLocalData());\n    }\n    getFlatCurrentPageData() {\n        return flatArray(this.getCurrentPageData());\n    }\n    recursiveSort(data, sorterFn) {\n        const { childrenColumnName = 'children' } = this.props;\n        return data.sort(sorterFn).map(item => (item[childrenColumnName] ? Object.assign(Object.assign({}, item), { [childrenColumnName]: this.recursiveSort(item[childrenColumnName], sorterFn) }) : item));\n    }\n    getLocalData() {\n        const state = this.state;\n        const { dataSource } = this.props;\n        let data = dataSource || [];\n        // 优化本地排序\n        data = data.slice(0);\n        const sorterFn = this.getSorterFn();\n        if (sorterFn) {\n            data = this.recursiveSort(data, sorterFn);\n        }\n        // 筛选\n        if (state.filters) {\n            Object.keys(state.filters).forEach((columnKey) => {\n                let col = this.findColumn(columnKey);\n                if (!col) {\n                    return;\n                }\n                let values = state.filters[columnKey] || [];\n                if (values.length === 0) {\n                    return;\n                }\n                const onFilter = col.onFilter;\n                data = onFilter ? data.filter(record => {\n                    return values.some(v => onFilter(v, record));\n                }) : data;\n            });\n        }\n        return data;\n    }\n    render() {\n        const _a = this.props, { style, className, prefixCls, showHeader, striped, rowSelection, rowClassName, expandedRowKeys, expandedRowRender, expandIcon, defaultExpandedRowKeys, expandable } = _a, restProps = __rest(_a, [\"style\", \"className\", \"prefixCls\", \"showHeader\", \"striped\", \"rowSelection\", \"rowClassName\", \"expandedRowKeys\", \"expandedRowRender\", \"expandIcon\", \"defaultExpandedRowKeys\", \"expandable\"]);\n        const data = this.getCurrentPageData();\n        // console.log('table render',data);\n        let columns = this.renderRowSelection();\n        const locale = this.getLocale();\n        let bordered = this.props.bordered;\n        // true = solid , false = 默认 = default\n        bordered = typeof bordered === 'boolean' ? (bordered ? 'solid' : 'default') : (typeof bordered === 'string' ? (bordered || 'default') : 'default');\n        const classString = classNames({\n            [`${prefixCls}-${this.props.size}`]: true,\n            // [`${prefixCls}-bordered`]: this.props.bordered,\n            [`${prefixCls}-bordered-${bordered}`]: bordered,\n            [`${prefixCls}-empty`]: !data.length,\n            [`${prefixCls}-without-column-header`]: !showHeader,\n            [`${prefixCls}-striped`]: striped,\n        });\n        const finalRowClassName = striped ? function (record, index) {\n            const stripedClass = index % 2 === 1 ? `${prefixCls}-row-even` : `${prefixCls}-row-odd`;\n            if (typeof rowClassName === 'function') {\n                return classNames(rowClassName.call(this, record, index), stripedClass);\n            }\n            return stripedClass;\n        } : rowClassName;\n        columns = this.renderColumnsDropdown(columns);\n        //deal with align & headerAlign\n        columns = treeMap(columns, (column) => {\n            const newColumn = Object.assign({}, column);\n            newColumn.className = classNames({\n                [`${prefixCls}-align-${newColumn.align}`]: newColumn.align,\n                [`${prefixCls}-header-align-${newColumn.headerAlign}`]: newColumn.headerAlign,\n            }, newColumn.className);\n            return newColumn;\n        });\n        // 原代码如此，未使用treeMap\n        let pre, cLen = columns.length;\n        columns = columns.map((column, i) => {\n            const newColumn = Object.assign({}, column);\n            newColumn.key = this.getColumnKey(newColumn, i);\n            // group前后需加上divider以示区分\n            if (newColumn.children) {\n                if (pre && !pre.children) {\n                    treeForEachLast([pre], (col) => {\n                        col.className = classNames(col.className, `${prefixCls}-group-divider`);\n                    });\n                }\n                // 最后一列不加\n                if (i !== cLen - 1) {\n                    treeForEachLast([newColumn], (col) => {\n                        col.className = classNames(col.className, `${prefixCls}-group-divider`);\n                    });\n                }\n            }\n            pre = newColumn;\n            return newColumn;\n        });\n        // 标记真正的最后一列（解决复杂多表头的情况）\n        treeForEachLast(columns, (col) => {\n            col.className = classNames(col.className, `${prefixCls}-last-column`);\n        });\n        // console.log('columns',columns);\n        let expandIconColumnIndex = rowSelection ? 1 : 0;\n        if ('expandIconColumnIndex' in restProps) {\n            expandIconColumnIndex = restProps.expandIconColumnIndex;\n        }\n        const table = (<RcTable key=\"table\" {...restProps} prefixCls={prefixCls} data={data} columns={columns} rowClassName={finalRowClassName} showHeader={showHeader} className={classString} expandable={Object.assign({ expandIconColumnIndex,\n            expandedRowRender,\n            expandedRowKeys,\n            defaultExpandedRowKeys, expandIcon: expandIcon || DefaultExpandIcon }, expandable)} emptyText={() => locale.emptyText}/>);\n        // if there is no pagination or no data,\n        // the height of spin should decrease by half of pagination\n        const paginationPatchClass = (this.hasPagination() && data && data.length !== 0)\n            ? `${prefixCls}-with-pagination` : `${prefixCls}-without-pagination`;\n        let loading = this.props.loading;\n        if (typeof loading === 'boolean') {\n            loading = {\n                spinning: loading,\n            };\n        }\n        return (<div className={classNames(`${prefixCls}-wrapper`, className)} style={style}>\n        <Spin {...loading} className={loading ? `${paginationPatchClass} ${prefixCls}-spin-holder` : ''}>\n          {table}\n          {this.renderPagination()}\n        </Spin>\n      </div>);\n    }\n}\nTable.Column = Column;\nTable.ColumnGroup = ColumnGroup;\nTable.HorizontalTable = HorizontalTable;\nTable.propTypes = {\n    dataSource: PropTypes.array,\n    columns: PropTypes.array,\n    prefixCls: PropTypes.string,\n    useFixedHeader: PropTypes.bool,\n    rowSelection: PropTypes.object,\n    className: PropTypes.string,\n    size: PropTypes.string,\n    loading: PropTypes.oneOfType([\n        PropTypes.bool,\n        PropTypes.object,\n    ]),\n    bordered: PropTypes.oneOfType([\n        PropTypes.bool,\n        PropTypes.string,\n    ]),\n    onChange: PropTypes.func,\n    locale: PropTypes.object,\n    dropdownPrefixCls: PropTypes.string,\n    sortDirections: PropTypes.array,\n};\nTable.defaultProps = {\n    dataSource: [],\n    prefixCls: 'w-table',\n    useFixedHeader: false,\n    rowSelection: null,\n    className: '',\n    size: 'default',\n    loading: false,\n    bordered: 'default',\n    indentSize: 20,\n    locale: {},\n    rowKey: 'key',\n    showHeader: true,\n    striped: true,\n    sortDirections: ['descend', 'ascend'],\n};\nTable.contextTypes = {\n    antLocale: PropTypes.object,\n};\n"],"file":"Table.js"}