{"version":3,"sources":["resizer/index.jsx"],"names":["React","classnames","DraggableCore","Icon","prefixCls","classResizerSibling","placeholderId","addClass","dom","className","classList","add","showPlaceholder","node","direction","el","document","getElementById","createElement","setAttribute","body","appendChild","getBoundingClientRect","height","width","top","left","style","transform","display","dragPlaceHolder","deltaX","deltaY","hidePlaceholder","Resizer","props","saveRef","handleStart","_e","data","foldedSize","state","startData","preNode","previousElementSibling","nextNode","nextElementSibling","min","max","delta","handleStop","e","onResize","folded","autoResize","styleName","preSize","nextSize","start","remove","button","querySelector","contains","target","h","h2","w","w2","setState","handleDrag","Math","y","x","handleToogle","toogleSize","defaultFolded","unfoldedSize","foldable","theme","type","toogleDir","Component","SiblingClassName","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport { DraggableCore } from 'react-draggable';\nimport Icon from './icon';\nconst prefixCls = 'w-resizer';\n// 似乎可以被react-draggable-transparent-selection取代\n// const classDraggingSibling = `${prefixCls}-dragging-sibling`;// 'react-draggable-dragging-sibling';\nconst classResizerSibling = `${prefixCls}-sibling`;\nconst placeholderId = `__${prefixCls}-placeholder`;\nfunction addClass(dom, className) {\n    if (dom && dom.classList && dom.classList.add) {\n        dom.classList.add(className);\n    }\n}\n// function removeClass(dom: HTMLElement, className: string) {\n//   if (dom && dom.classList && dom.classList.remove) {\n//     dom.classList.remove(className);\n//   }\n// }\nfunction showPlaceholder(node, { direction }) {\n    let el = document.getElementById(placeholderId);\n    if (el == null) {\n        el = document.createElement('div');\n        el.setAttribute('id', placeholderId);\n        el.setAttribute('class', `${prefixCls}-placeholder`);\n        document.body.appendChild(el);\n    }\n    const { height, width, top, left } = node.getBoundingClientRect();\n    // console.log('showPlaceholder',height, width,direction);\n    if (direction === 'n' || direction === 's') {\n        el.style.width = `${width}px`;\n        el.style.height = '';\n    }\n    else {\n        el.style.height = `${height}px`;\n        el.style.width = '';\n    }\n    el.style.top = `${top}px`;\n    el.style.left = `${left}px`;\n    el.style.transform = '';\n    el.style.display = \"block\";\n}\nfunction dragPlaceHolder({ deltaX, deltaY }) {\n    // console.log('dragPlaceHolder',{ deltaX, deltaY });\n    const el = document.getElementById(placeholderId);\n    if (el != null) {\n        let transform = `translateX(${deltaX || 0}px)  translateY(${deltaY || 0}px)`;\n        el.style.transform = transform;\n    }\n}\nfunction hidePlaceholder() {\n    const el = document.getElementById(placeholderId);\n    if (el != null) {\n        el.style.display = 'none';\n    }\n}\nclass Resizer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.saveRef = (node) => {\n            this.node = node;\n        };\n        this.handleStart = (_e, data) => {\n            // console.log('handleStart', data);\n            const { node } = data;\n            const { direction } = this.props;\n            const { foldedSize } = this.state;\n            this.startData = data;\n            const preNode = node.previousElementSibling;\n            const nextNode = node.nextElementSibling;\n            // if (preNode && nextNode) {\n            //   preNode.className += ` ${classDraggingSibling}`;\n            //   nextNode.className += ` ${classDraggingSibling}`;\n            // }\n            if (preNode && nextNode) {\n                if (direction === 'n' || direction === 's') {\n                    this.min = -(preNode.getBoundingClientRect().height - foldedSize);\n                    this.max = nextNode.getBoundingClientRect().height;\n                }\n                else {\n                    this.min = -(preNode.getBoundingClientRect().width - foldedSize);\n                    this.max = nextNode.getBoundingClientRect().width;\n                }\n            }\n            this.delta = null;\n        };\n        this.handleStop = (e, data) => {\n            // console.log('handleStop', e, data);// data.deltaX  无效\n            const { node } = data;\n            const { delta } = this;\n            const preNode = node.previousElementSibling;\n            const nextNode = node.nextElementSibling;\n            const { direction, onResize } = this.props;\n            let { folded } = this.state;\n            let autoResize = true, styleName = 'width', preSize, nextSize;\n            // console.log('handleStop', delta);\n            this.start = false;\n            // removeClass(document.body, `${prefixCls}-body-dragging-${direction}`);\n            document.body.classList.remove(`${prefixCls}-body-dragging`, `${prefixCls}-body-dragging-${direction}`);\n            hidePlaceholder();\n            if (delta == null) {\n                return; // 未移动\n            }\n            const button = node.querySelector(`.${prefixCls}-button`);\n            if (button && button.contains(e.target)) {\n                return; //  避免点击button引起的handleStop\n            }\n            const { deltaX = 0, deltaY = 0 } = delta;\n            if (preNode && nextNode) {\n                // preNode.className = preNode.className.replace(` ${classDraggingSibling}`, '');\n                // nextNode.className = nextNode.className.replace(` ${classDraggingSibling}`, '');\n                if (direction === 'n' || direction === 's') {\n                    const h = preNode.getBoundingClientRect().height;\n                    const h2 = nextNode.getBoundingClientRect().height;\n                    // deltaY = data.y - startData.y;\n                    // y = data.y;\n                    // lastY = startData.y;\n                    preSize = h + deltaY;\n                    nextSize = h2 - deltaY;\n                    styleName = 'height';\n                }\n                else {\n                    const w = preNode.getBoundingClientRect().width;\n                    const w2 = nextNode.getBoundingClientRect().width;\n                    // deltaX = data.x - startData.x;\n                    // x = data.x;\n                    // lastX = startData.x;\n                    preSize = w + deltaX;\n                    nextSize = w2 - deltaX;\n                }\n                if (folded && (deltaX > 0 || deltaY > 0)) {\n                    folded = false;\n                    this.setState({\n                        folded,\n                    });\n                }\n                if (typeof onResize === 'function') {\n                    autoResize = onResize(e, {\n                        node,\n                        deltaX, deltaY,\n                        folded\n                    }) !== false;\n                }\n                if (autoResize) {\n                    preNode.style[styleName] = `${preSize}px`;\n                    nextNode.style[styleName] = `${nextSize}px`;\n                }\n            }\n        };\n        this.handleDrag = (_e, data) => {\n            const { node } = data;\n            const { direction } = this.props;\n            const { startData, min, max } = this;\n            if (!this.start) {\n                this.start = true;\n                document.body.classList.add(`${prefixCls}-body-dragging`, `${prefixCls}-body-dragging-${direction}`);\n                showPlaceholder(node, { direction });\n            }\n            // console.log('handleDrag', data);\n            // todo: 移动到接近folded大小时自动切换folded状态功能\n            if (direction === 'n' || direction === 's') {\n                this.delta = { deltaY: Math.min(Math.max(data.y - startData.y, min), max) };\n                dragPlaceHolder(this.delta);\n            }\n            else {\n                this.delta = { deltaX: Math.min(Math.max(data.x - startData.x, min), max) };\n                dragPlaceHolder(this.delta);\n            }\n        };\n        this.handleToogle = (e) => {\n            // console.log('handleToogle');\n            const { node } = this;\n            const { direction, onResize } = this.props;\n            let { folded, foldedSize } = this.state;\n            const preNode = node.previousElementSibling;\n            const nextNode = node.nextElementSibling;\n            let autoResize = true;\n            let deltaX = 0, deltaY = 0, preSize, nextSize, styleName = 'width';\n            if (preNode && nextNode) {\n                switch (direction) {\n                    case 'n':\n                        styleName = 'height';\n                        if (folded) {\n                            deltaY = -this.toogleSize + foldedSize;\n                            preSize = this.toogleSize;\n                            nextSize = nextNode.getBoundingClientRect().height + deltaY;\n                        }\n                        else {\n                            this.toogleSize = preNode.getBoundingClientRect().height;\n                            deltaY = -this.toogleSize + foldedSize;\n                            preSize = foldedSize;\n                            nextSize = nextNode.getBoundingClientRect().height - deltaY;\n                        }\n                        break;\n                    case 's':\n                        styleName = 'height';\n                        if (folded) {\n                            deltaY = -this.toogleSize + foldedSize;\n                            preSize = preNode.getBoundingClientRect().height + deltaY;\n                            nextSize = this.toogleSize;\n                        }\n                        else {\n                            this.toogleSize = nextNode.getBoundingClientRect().height;\n                            deltaY = -(this.toogleSize - foldedSize);\n                            preSize = preNode.getBoundingClientRect().height + deltaY;\n                            nextSize = foldedSize;\n                        }\n                        break;\n                    case 'w':\n                        if (folded) {\n                            deltaX = this.toogleSize - foldedSize;\n                            preSize = this.toogleSize;\n                            nextSize = nextNode.getBoundingClientRect().width - deltaX;\n                        }\n                        else {\n                            this.toogleSize = preNode.getBoundingClientRect().width;\n                            deltaX = -this.toogleSize + foldedSize;\n                            preSize = foldedSize;\n                            nextSize = nextNode.getBoundingClientRect().width - deltaX;\n                        }\n                        break;\n                    case 'e':\n                        if (folded) {\n                            deltaX = -this.toogleSize + foldedSize;\n                            preSize = preNode.getBoundingClientRect().width + deltaX;\n                            nextSize = this.toogleSize;\n                        }\n                        else {\n                            this.toogleSize = nextNode.getBoundingClientRect().width;\n                            deltaX = this.toogleSize - foldedSize;\n                            preSize = preNode.getBoundingClientRect().width + deltaX;\n                            nextSize = foldedSize;\n                        }\n                        break;\n                    default:\n                        break;\n                }\n                // console.log(this.toogleSize, { direction, folded, deltaX, foldedSize, preSize, nextSize, preNode, nextNode });\n                folded = !folded;\n                this.setState({\n                    folded,\n                });\n                if (typeof onResize === 'function') {\n                    // onResize 返回 false 可阻止内部Resize执行\n                    autoResize = onResize(e, { node, deltaX, deltaY, folded }) !== false;\n                }\n                if (autoResize && preSize != null && nextSize != null) {\n                    preNode.style[styleName] = `${preSize}px`;\n                    nextNode.style[styleName] = `${nextSize}px`;\n                }\n            }\n        };\n        this.state = {\n            folded: props.defaultFolded,\n            foldedSize: props.foldedSize,\n            unfoldedSize: props.unfoldedSize,\n        };\n        this.toogleSize = props.unfoldedSize || 0;\n    }\n    componentDidMount() {\n        const { node } = this;\n        if (node) {\n            // 若相邻组件因重新render刷新className导致样式丢失，只能手动给组件添加上此样式(Resizer.SiblingClassName)\n            if (node.previousElementSibling) {\n                addClass(node.previousElementSibling, classResizerSibling);\n            }\n            if (node.nextElementSibling) {\n                addClass(node.nextElementSibling, classResizerSibling);\n            }\n        }\n    }\n    render() {\n        // console.log('ResizeHandle render');\n        const { folded } = this.state;\n        const { direction, foldable, style, theme, className, type } = this.props;\n        let toogleDir = direction;\n        if (folded) {\n            switch (direction) {\n                case 'n':\n                    toogleDir = 's';\n                    break;\n                case 's':\n                    toogleDir = 'n';\n                    break;\n                case 'w':\n                    toogleDir = 'e';\n                    break;\n                case 'e':\n                    toogleDir = 'w';\n                    break;\n                default:\n                    break;\n            }\n        }\n        return (<DraggableCore \n        // axis={(direction === 'n' || direction === 's') ? 'y' : 'x'}\n        onStart={this.handleStart} onDrag={this.handleDrag} onStop={this.handleStop}>\r\n        <div ref={this.saveRef} className={classnames(className, prefixCls, {\n            [`${prefixCls}-folded`]: folded,\n            [`${prefixCls}-${direction}`]: true,\n            [`${prefixCls}-${theme}`]: true,\n            [`${prefixCls}-type-${type}`]: type != null,\n        })} style={style}>\r\n          {foldable ? <span onClick={this.handleToogle} className={`${prefixCls}-button ${prefixCls}-button-${toogleDir}`}>\r\n            <Icon type=\"button-bg\"/></span> : null}\r\n        </div>\r\n      </DraggableCore>);\n    }\n}\n// static propTypes = {\n//   type: PropTypes.string,\n//   direction: PropTypes.string, // n/s/w/e\n//   theme: PropTypes.string,\n//   position: PropTypes.string,\n//   foldable: PropTypes.bool,\n//   defaultFolded: PropTypes.bool,\n//   foldedSize: PropTypes.number,\n//   unfoldedSize: PropTypes.number,\n//   onResize: PropTypes.func,\n// }\nResizer.SiblingClassName = classResizerSibling;\nResizer.defaultProps = {\n    type: 'default',\n    direction: 'w',\n    theme: 'light',\n    // position: 'default', // 其实没有必要\n    foldable: true,\n    defaultFolded: false,\n    foldedSize: 0,\n    unfoldedSize: 208,\n};\nexport default Resizer;\n"],"file":"index.js"}