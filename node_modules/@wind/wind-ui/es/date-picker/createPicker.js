function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

import React from 'react';
import PropTypes from 'prop-types';
import moment from 'moment';
import MonthCalendar from "rc-calendar/es/MonthCalendar";
import RcDatePicker from "rc-calendar/es/Picker";
import classNames from 'classnames';
import omit from 'omit.js';
import CloseCircleF from "@wind/icons/es/icons/CloseCircleF";
import CalendarO from "@wind/icons/es/icons/CalendarO";
import { getLocaleCode } from '../_util/getLocale';
import warning from '../_util/warning';
export var popupAlign = {
  points: ['tl', 'bl'],
  overflow: {
    adjustX: 1,
    adjustY: 1
  },
  offset: [0, 2],
  targetOffset: [0, 0]
};
export default function createPicker(TheCalendar) {
  var _a;

  return _a = /*#__PURE__*/function (_React$Component) {
    _inherits(CalenderWrapper, _React$Component);

    var _super = _createSuper(CalenderWrapper);

    function CalenderWrapper(props) {
      var _this;

      _classCallCheck(this, CalenderWrapper);

      _this = _super.call(this, props);

      _this.renderFooter = function () {
        var _this$props = _this.props,
            prefixCls = _this$props.prefixCls,
            renderExtraFooter = _this$props.renderExtraFooter;
        return renderExtraFooter ? /*#__PURE__*/React.createElement("div", {
          className: "".concat(prefixCls, "-footer-extra")
        }, renderExtraFooter.apply(void 0, arguments)) : null;
      };

      _this.clearSelection = function (e) {
        e.preventDefault();
        e.stopPropagation();

        _this.handleChange(null);
      };

      _this.handleChange = function (value) {
        // console.log('DatePicker change,', value);
        var props = _this.props;
        var allowClear = props.allowClear; // 如果不允许清空但value为null，则不处理（防止input删除导致的清空）

        if (!allowClear && value == null) {
          return;
        }

        if (!('value' in props)) {
          _this.setState({
            value: value
          });
        }

        props.onChange(value, value && value.format(props.format) || '');
      };

      var value = props.value || props.defaultValue;

      if (value && !moment.isMoment(value)) {
        throw new Error('The value/defaultValue of DatePicker or MonthPicker must be ' + 'a moment object after `antd@2.0`, see: https://u.ant.design/date-picker-value');
      }

      _this.state = {
        value: value
      };
      return _this;
    }

    _createClass(CalenderWrapper, [{
      key: "componentWillReceiveProps",
      value: function componentWillReceiveProps(nextProps) {
        if ('value' in nextProps) {
          this.setState({
            value: nextProps.value
          });
        }
      } // handleInputChange = (e) => {
      //   const { value } = e.target;
      //   this.handleChange(value);
      // }

    }, {
      key: "render",
      value: function render() {
        var _classNames;

        var value = this.state.value;
        var props = omit(this.props, ['onChange']);
        var prefixCls = props.prefixCls,
            locale = props.locale;
        var placeholder = 'placeholder' in props ? props.placeholder : locale.lang.placeholder;
        var disabledTime = props.showTime ? props.disabledTime : null;
        var calendarClassName = classNames((_classNames = {}, _defineProperty(_classNames, "".concat(prefixCls, "-time"), props.showTime), _defineProperty(_classNames, "".concat(prefixCls, "-month"), MonthCalendar === TheCalendar), _classNames));
        var pickerChangeHandler = {};
        var calendarHandler = {};

        if (props.showTime) {
          calendarHandler = {
            // fix https://github.com/ant-design/ant-design/issues/1902
            onSelect: this.handleChange
          };
        } else {
          pickerChangeHandler = {
            onChange: this.handleChange
          };
        }

        var showDateInput = true; // 是否显示TheCalendar的DateInput

        warning(!('onOK' in props), 'It should be `DatePicker[onOk]` or `MonthPicker[onOk]`, instead of `onOK`!');
        var calendar = /*#__PURE__*/React.createElement(TheCalendar, _extends({
          showDateInput: showDateInput
        }, calendarHandler, {
          disabledDate: props.disabledDate,
          disabledTime: disabledTime,
          locale: locale.lang,
          timePicker: props.timePicker,
          defaultValue: props.defaultPickerValue || moment(),
          dateInputPlaceholder: placeholder,
          prefixCls: prefixCls,
          className: calendarClassName,
          onOk: props.onOk,
          format: props.format,
          showToday: props.showToday,
          monthCellContentRender: props.monthCellContentRender,
          renderFooter: this.renderFooter
        })); // default width for showTime

        var pickerStyle = {};

        if (props.showTime) {
          pickerStyle.width = props.style && props.style.width || 154;
        }

        var clearIcon = !props.disabled && props.allowClear && value ? /*#__PURE__*/React.createElement(CloseCircleF, {
          className: "".concat(prefixCls, "-picker-clear"),
          onClick: this.clearSelection
        }) : null;

        var input = function input(_ref) {
          var inputValue = _ref.value;
          return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("input", {
            disabled: props.disabled,
            readOnly: true // onChange={this.handleInputChange} 
            ,
            value: inputValue && inputValue.format(props.format) || '',
            placeholder: placeholder,
            className: props.pickerInputClass
          }), clearIcon, /*#__PURE__*/React.createElement("span", {
            className: "".concat(prefixCls, "-picker-icon")
          }, /*#__PURE__*/React.createElement(CalendarO, null)));
        };

        var pickerValue = value;
        var localeCode = getLocaleCode(this.context);

        if (pickerValue && localeCode) {
          pickerValue.locale(localeCode);
        }

        var style = _extends(_extends({}, props.style), pickerStyle);

        return /*#__PURE__*/React.createElement("span", {
          className: classNames(props.className, props.pickerClass),
          style: style
        }, /*#__PURE__*/React.createElement(RcDatePicker, _extends({
          align: showDateInput ? null : popupAlign
        }, props, pickerChangeHandler, {
          calendar: calendar,
          value: pickerValue,
          prefixCls: "".concat(prefixCls, "-picker-container"),
          style: props.popupStyle
        }), input));
      }
    }]);

    return CalenderWrapper;
  }(React.Component), _a.contextTypes = {
    antLocale: PropTypes.object
  }, _a.defaultProps = {
    prefixCls: 'w-calendar',
    allowClear: true,
    showToday: true
  }, _a;
}
//# sourceMappingURL=createPicker.js.map
