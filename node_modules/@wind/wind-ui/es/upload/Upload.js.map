{"version":3,"sources":["upload/Upload.jsx"],"names":["React","RcUpload","PropTypes","classNames","UploadList","T","fileToObject","genPercentAdd","getFileItem","removeFileItem","defaultLocale","uploading","removeFile","uploadError","previewFile","Upload","props","onStart","file","targetItem","nextFileList","state","fileList","concat","length","map","f","fileObject","status","push","onChange","window","FormData","autoUpdateProgress","onSuccess","response","clearProgressTimer","JSON","parse","e","onProgress","percent","event","onError","error","handleManualRemove","refs","upload","abort","handleRemove","info","setState","onFileDrop","dragState","type","defaultFileList","locale","context","antLocale","_","getPercent","curPercent","progressTimer","setInterval","onRemove","Promise","resolve","then","ret","removedFileList","nextProps","clearInterval","prefixCls","showUploadList","listType","onPreview","disabled","children","className","rcUploadProps","showRemoveIcon","showPreviewIcon","uploadList","getLocale","dragCls","some","uploadButtonCls","uploadButton","display","Component","defaultProps","multiple","action","data","accept","beforeUpload","supportServerRender","contextTypes","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport RcUpload from 'rc-upload';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport UploadList from './UploadList';\nimport { T, fileToObject, genPercentAdd, getFileItem, removeFileItem } from './utils';\nconst defaultLocale = {\n    uploading: '文件上传中',\n    removeFile: '删除文件',\n    uploadError: '上传错误',\n    previewFile: '预览文件',\n};\nexport default class Upload extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onStart = (file) => {\n            let targetItem;\n            let nextFileList = this.state.fileList.concat();\n            if (file.length > 0) {\n                targetItem = file.map((f) => {\n                    const fileObject = fileToObject(f);\n                    fileObject.status = 'uploading';\n                    return fileObject;\n                });\n                nextFileList = nextFileList.concat(targetItem);\n            }\n            else {\n                targetItem = fileToObject(file);\n                targetItem.status = 'uploading';\n                nextFileList.push(targetItem);\n            }\n            this.onChange({\n                file: targetItem,\n                fileList: nextFileList,\n            });\n            // fix ie progress\n            if (!window.FormData) {\n                this.autoUpdateProgress(0, targetItem);\n            }\n        };\n        this.onSuccess = (response, file) => {\n            this.clearProgressTimer();\n            try {\n                if (typeof response === 'string') {\n                    response = JSON.parse(response);\n                }\n            }\n            catch (e) { /* do nothing */\n            }\n            let fileList = this.state.fileList;\n            let targetItem = getFileItem(file, fileList);\n            // removed\n            if (!targetItem) {\n                return;\n            }\n            targetItem.status = 'done';\n            targetItem.response = response;\n            this.onChange({\n                file: Object.assign({}, targetItem),\n                fileList,\n            });\n        };\n        this.onProgress = (e, file) => {\n            let fileList = this.state.fileList;\n            let targetItem = getFileItem(file, fileList);\n            // removed\n            if (!targetItem) {\n                return;\n            }\n            targetItem.percent = e.percent;\n            this.onChange({\n                event: e,\n                file: Object.assign({}, targetItem),\n                fileList: this.state.fileList,\n            });\n        };\n        this.onError = (error, response, file) => {\n            this.clearProgressTimer();\n            let fileList = this.state.fileList;\n            let targetItem = getFileItem(file, fileList);\n            // removed\n            if (!targetItem) {\n                return;\n            }\n            targetItem.error = error;\n            targetItem.response = response;\n            targetItem.status = 'error';\n            this.onChange({\n                file: Object.assign({}, targetItem),\n                fileList,\n            });\n        };\n        this.handleManualRemove = (file) => {\n            this.refs.upload.abort(file);\n            file.status = 'removed'; // eslint-disable-line\n            this.handleRemove(file);\n        };\n        this.onChange = (info) => {\n            if (!('fileList' in this.props)) {\n                this.setState({ fileList: info.fileList });\n            }\n            const { onChange } = this.props;\n            if (onChange) {\n                onChange(info);\n            }\n        };\n        this.onFileDrop = (e) => {\n            this.setState({\n                dragState: e.type,\n            });\n        };\n        this.state = {\n            fileList: this.props.fileList || this.props.defaultFileList || [],\n            dragState: 'drop',\n        };\n    }\n    componentWillUnmount() {\n        this.clearProgressTimer();\n    }\n    getLocale() {\n        let locale = {};\n        if (this.context.antLocale && this.context.antLocale.Upload) {\n            locale = this.context.antLocale.Upload;\n        }\n        return Object.assign(Object.assign(Object.assign({}, defaultLocale), locale), this.props.locale);\n    }\n    autoUpdateProgress(_, file) {\n        const getPercent = genPercentAdd();\n        let curPercent = 0;\n        this.clearProgressTimer();\n        this.progressTimer = setInterval(() => {\n            curPercent = getPercent(curPercent);\n            this.onProgress({\n                percent: curPercent,\n            }, file);\n        }, 200);\n    }\n    handleRemove(file) {\n        const { onRemove } = this.props;\n        Promise.resolve(typeof onRemove === 'function' ? onRemove(file) : onRemove).then(ret => {\n            // Prevent removing file\n            if (ret === false) {\n                return;\n            }\n            const removedFileList = removeFileItem(file, this.state.fileList);\n            if (removedFileList) {\n                this.onChange({\n                    file,\n                    fileList: removedFileList,\n                });\n            }\n        });\n    }\n    componentWillReceiveProps(nextProps) {\n        if ('fileList' in nextProps) {\n            this.setState({\n                fileList: nextProps.fileList || [],\n            });\n        }\n    }\n    clearProgressTimer() {\n        clearInterval(this.progressTimer);\n    }\n    render() {\n        const { prefixCls = '', showUploadList, listType, onPreview, type, disabled, children, className, } = this.props;\n        const rcUploadProps = Object.assign({ onStart: this.onStart, onError: this.onError, onProgress: this.onProgress, onSuccess: this.onSuccess }, this.props);\n        delete rcUploadProps.className;\n        const { showRemoveIcon, showPreviewIcon } = showUploadList;\n        const uploadList = showUploadList ? (<UploadList listType={listType} items={this.state.fileList} onPreview={onPreview} onRemove={this.handleManualRemove} showRemoveIcon={showRemoveIcon} showPreviewIcon={showPreviewIcon} locale={this.getLocale()}/>) : null;\n        if (type === 'drag') {\n            const dragCls = classNames(prefixCls, {\n                [`${prefixCls}-drag`]: true,\n                [`${prefixCls}-drag-uploading`]: this.state.fileList.some((file) => file.status === 'uploading'),\n                [`${prefixCls}-drag-hover`]: this.state.dragState === 'dragover',\n                [`${prefixCls}-disabled`]: disabled,\n            });\n            return (<span className={className}>\n          <div className={dragCls} onDrop={this.onFileDrop} onDragOver={this.onFileDrop} onDragLeave={this.onFileDrop}>\n            <RcUpload {...rcUploadProps} ref=\"upload\" className={`${prefixCls}-btn`}>\n              <div className={`${prefixCls}-drag-container`}>\n                {children}\n              </div>\n            </RcUpload>\n          </div>\n          {uploadList}\n        </span>);\n        }\n        const uploadButtonCls = classNames(prefixCls, {\n            [`${prefixCls}-select`]: true,\n            [`${prefixCls}-select-${listType}`]: true,\n            [`${prefixCls}-disabled`]: disabled,\n        });\n        const uploadButton = (<div className={uploadButtonCls} style={{ display: children ? '' : 'none' }}>\n        <RcUpload {...rcUploadProps} ref=\"upload\"/>\n      </div>);\n        if (listType === 'picture-card') {\n            return (<span className={className}>\n          {uploadList}\n          {uploadButton}\n        </span>);\n        }\n        return (<span className={className}>\n        {uploadButton}\n        {uploadList}\n      </span>);\n    }\n}\nUpload.defaultProps = {\n    prefixCls: 'w-upload',\n    type: 'select',\n    multiple: false,\n    action: '',\n    data: {},\n    accept: '',\n    beforeUpload: T,\n    showUploadList: true,\n    listType: 'text',\n    className: '',\n    disabled: false,\n    supportServerRender: true,\n};\nUpload.contextTypes = {\n    antLocale: PropTypes.object,\n};\n"],"file":"Upload.js"}