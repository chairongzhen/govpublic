{"version":3,"sources":["anchor/AnchorLink.jsx"],"names":["React","PropTypes","classNames","AnchorLink","arguments","handleClick","context","antAnchor","scrollTo","props","href","registerLink","unregisterLink","prefixCls","title","children","active","activeLink","wrapperClassName","titleClassName","Component","defaultProps","contextTypes","object"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;IACqBC,U;;;;;AACjB,wBAAc;AAAA;;AAAA;;AACV,+BAASC,SAAT;;AACA,UAAKC,WAAL,GAAmB,YAAM;AACrB,YAAKC,OAAL,CAAaC,SAAb,CAAuBC,QAAvB,CAAgC,MAAKC,KAAL,CAAWC,IAA3C;AACH,KAFD;;AAFU;AAKb;;;;wCACmB;AAChB,WAAKJ,OAAL,CAAaC,SAAb,CAAuBI,YAAvB,CAAoC,KAAKF,KAAL,CAAWC,IAA/C;AACH;;;2CACsB;AACnB,WAAKJ,OAAL,CAAaC,SAAb,CAAuBK,cAAvB,CAAsC,KAAKH,KAAL,CAAWC,IAAjD;AACH;;;6BACQ;AAAA,wBACyC,KAAKD,KAD9C;AAAA,UACGI,SADH,eACGA,SADH;AAAA,UACcH,IADd,eACcA,IADd;AAAA,UACoBI,KADpB,eACoBA,KADpB;AAAA,UAC2BC,QAD3B,eAC2BA,QAD3B;AAEL,UAAMC,MAAM,GAAG,KAAKV,OAAL,CAAaC,SAAb,CAAuBU,UAAvB,KAAsCP,IAArD;AACA,UAAMQ,gBAAgB,GAAGhB,UAAU,WAAIW,SAAJ,0CAC3BA,SAD2B,mBACDG,MADC,EAAnC;AAGA,UAAMG,cAAc,GAAGjB,UAAU,WAAIW,SAAJ,gDACzBA,SADyB,yBACOG,MADP,EAAjC;AAGA,0BAAQ;AAAK,QAAA,SAAS,EAAEE;AAAhB,sBACR;AAAG,QAAA,SAAS,EAAEC,cAAd;AAA8B,QAAA,IAAI,EAAET,IAApC;AAA0C,QAAA,KAAK,EAAE,OAAOI,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoC,EAArF;AAAyF,QAAA,OAAO,EAAE,KAAKT;AAAvG,SACGS,KADH,CADQ,EAIPC,QAJO,CAAR;AAMH;;;;EA5BmCf,KAAK,CAACoB,S;;SAAzBjB,U;AA8BrBA,UAAU,CAACkB,YAAX,GAA0B;AACtBR,EAAAA,SAAS,EAAE,UADW;AAEtBH,EAAAA,IAAI,EAAE;AAFgB,CAA1B;AAIAP,UAAU,CAACmB,YAAX,GAA0B;AACtBf,EAAAA,SAAS,EAAEN,SAAS,CAACsB;AADC,CAA1B","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nexport default class AnchorLink extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.handleClick = () => {\n            this.context.antAnchor.scrollTo(this.props.href);\n        };\n    }\n    componentDidMount() {\n        this.context.antAnchor.registerLink(this.props.href);\n    }\n    componentWillUnmount() {\n        this.context.antAnchor.unregisterLink(this.props.href);\n    }\n    render() {\n        const { prefixCls, href, title, children, } = this.props;\n        const active = this.context.antAnchor.activeLink === href;\n        const wrapperClassName = classNames(`${prefixCls}-link`, {\n            [`${prefixCls}-link-active`]: active,\n        });\n        const titleClassName = classNames(`${prefixCls}-link-title`, {\n            [`${prefixCls}-link-title-active`]: active,\n        });\n        return (<div className={wrapperClassName}>\n        <a className={titleClassName} href={href} title={typeof title === 'string' ? title : ''} onClick={this.handleClick}>\n          {title}\n        </a>\n        {children}\n      </div>);\n    }\n}\nAnchorLink.defaultProps = {\n    prefixCls: 'w-anchor',\n    href: '#',\n};\nAnchorLink.contextTypes = {\n    antAnchor: PropTypes.object,\n};\n"],"file":"AnchorLink.js"}