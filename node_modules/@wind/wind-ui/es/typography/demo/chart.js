function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var __rest = this && this.__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};

import React from 'react';
import PropTypes from 'prop-types';
import ReactEchartsCore from 'echarts-for-react/lib/core';
import scriptjs from 'scriptjs';
export var colors6 = ['#38447C', '#FF8029', '#6175DE', '#EA4160', '#7D609A', '#FEC210'];
export var colors12 = ['#38447C', '#43A08F', '#FF8029', '#C21313', '#6175DE', '#842FAF', '#EA4160', '#4992E6', '#7D609A', '#A8502E', '#FEC210', '#A38E28'];
var textColor = '#333';
var textColorSecondary = '#666';
export var windTheme = {
  color: colors6,
  // backgroundColor: '#13161A',
  textStyle: {},
  title: {
    textStyle: {
      color: textColor
    },
    subtextStyle: {
      color: textColorSecondary
    },
    left: 'center'
  },
  legend: {
    textStyle: {
      color: textColor
    }
  },
  tooltip: {
    axisPointer: {
      lineStyle: {
        color: textColor,
        width: '1'
      },
      crossStyle: {
        color: textColor,
        width: '1'
      }
    }
  },
  markPoint: {
    label: {
      normal: {
        textStyle: {
          color: textColor
        }
      },
      emphasis: {
        textStyle: {
          color: textColor
        }
      }
    }
  },
  categoryAxis: {
    axisLine: {
      // show: true,
      lineStyle: {
        color: textColorSecondary
      }
    },
    axisTick: {
      // show: true,
      lineStyle: {
        color: textColorSecondary
      }
    },
    axisLabel: {
      // show: true,
      textStyle: {
        color: textColorSecondary
      }
    },
    splitLine: {
      // show: true,
      lineStyle: {
        color: ['#aaaaaa']
      }
    },
    splitArea: {
      // show: false,
      areaStyle: {
        color: ['#eeeeee']
      }
    }
  },
  valueAxis: {
    axisLine: {
      // show: true,
      lineStyle: {
        color: textColorSecondary
      }
    },
    axisTick: {
      // show: true,
      lineStyle: {
        color: textColorSecondary
      }
    },
    axisLabel: {
      // show: true,
      textStyle: {
        color: textColorSecondary
      }
    },
    splitLine: {
      // show: true,
      lineStyle: {
        color: ['#aaaaaa']
      }
    },
    splitArea: {
      // show: false,
      areaStyle: {
        color: ['#eeeeee']
      }
    }
  }
};
var baseOption = {
  title: {
    text: '全球各大洲人口增长历史及预测'
  },
  graphic: {
    elements: [{
      type: 'text',
      style: {
        text: "\u6570\u636E\u6765\u6E90: Wikipedia.org",
        fill: '#666'
      },
      silent: true,
      right: 16,
      bottom: 8
    }]
  },
  xAxis: {
    type: 'category',
    data: ['1750', '1800', '1850', '1900', '1950', '1999', '2050']
  },
  yAxis: {
    name: '十亿',
    labels: {
      formatter: function formatter() {
        return this.value / 1000;
      }
    }
  },
  legend: {
    show: true,
    bottom: 8
  },
  // grid : {
  //   bottom: 100
  // },
  tooltip: {
    split: true,
    valueSuffix: '百万'
  },
  series: [{
    "name": "亚洲",
    type: "bar",
    "data": [502, 635, 809, 947, 1402, 3634, 5268]
  }, {
    "name": "非洲",
    type: "bar",
    "data": [106, 107, 111, 133, 221, 767, 1766]
  }, {
    "name": "欧洲",
    type: "bar",
    "data": [163, 203, 276, 408, 547, 729, 628]
  }, {
    "name": "美洲",
    type: "bar",
    "data": [18, 31, 54, 156, 339, 818, 1201]
  }, {
    "name": "大洋洲",
    type: "bar",
    "data": [2, 2, 2, 6, 13, 30, 46]
  }]
};
export var Charts = /*#__PURE__*/function (_React$Component) {
  _inherits(Charts, _React$Component);

  var _super = _createSuper(Charts);

  function Charts() {
    var _this;

    _classCallCheck(this, Charts);

    _this = _super.apply(this, arguments);
    _this.state = {
      echarts: window.echarts
    };
    return _this;
  }

  _createClass(Charts, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      var echarts = this.state.echarts;

      if (echarts == null) {
        // 异步加载第三方库
        scriptjs('/vendors/echarts/echarts.min.js', function () {
          var _window = window,
              chart = _window.echarts;
          chart.registerTheme('wind_theme', windTheme); // 6种以上使用12色

          chart.registerTheme('wind_theme2', _extends(_extends({}, windTheme), {
            color: colors12
          }));

          _this2.setState({
            echarts: chart
          });
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var props = this.props;
      var echarts = this.state.echarts;

      var option = props.option,
          _props$placeholder = props.placeholder,
          placeholder = _props$placeholder === void 0 ? null : _props$placeholder,
          restProps = __rest(props, ["option", "placeholder"]);

      var theme = 'wind_theme';

      if (option.series && option.series.length > 6) {
        theme = 'wind_theme2';
      } // console.log('Charts render', option);


      return echarts ? /*#__PURE__*/React.createElement(ReactEchartsCore, _extends({
        echarts: echarts,
        theme: theme
      }, restProps, {
        option: option
      })) : placeholder;
    }
  }]);

  return Charts;
}(React.Component);
Charts.propTypes = {
  option: PropTypes.object.isRequired,
  placeholder: PropTypes.node
};
Charts.defaultProps = {
  placeholder: null
};

var Chart = /*#__PURE__*/function (_React$Component2) {
  _inherits(Chart, _React$Component2);

  var _super2 = _createSuper(Chart);

  function Chart() {
    _classCallCheck(this, Chart);

    return _super2.apply(this, arguments);
  }

  _createClass(Chart, [{
    key: "render",
    value: function render() {
      // console.log('chart render ', series);
      var option = _extends({}, baseOption);

      return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(Charts, {
        option: option
      }));
    }
  }]);

  return Chart;
}(React.Component);

export { Chart as default };
//# sourceMappingURL=chart.js.map
