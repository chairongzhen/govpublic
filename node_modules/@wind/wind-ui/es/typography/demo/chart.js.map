{"version":3,"sources":["typography/demo/chart.jsx"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","PropTypes","ReactEchartsCore","scriptjs","colors6","colors12","textColor","textColorSecondary","windTheme","color","textStyle","title","subtextStyle","left","legend","tooltip","axisPointer","lineStyle","width","crossStyle","markPoint","label","normal","emphasis","categoryAxis","axisLine","axisTick","axisLabel","splitLine","splitArea","areaStyle","valueAxis","baseOption","text","graphic","elements","type","style","fill","silent","right","bottom","xAxis","data","yAxis","name","labels","formatter","value","show","split","valueSuffix","series","Charts","arguments","state","echarts","window","chart","registerTheme","setState","props","option","placeholder","restProps","theme","Component","propTypes","object","isRequired","node","defaultProps","Chart"],"mappings":"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","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactEchartsCore from 'echarts-for-react/lib/core';\nimport scriptjs from 'scriptjs';\nexport const colors6 = ['#38447C', '#FF8029', '#6175DE', '#EA4160', '#7D609A', '#FEC210'];\nexport const colors12 = ['#38447C', '#43A08F', '#FF8029', '#C21313', '#6175DE', '#842FAF', '#EA4160', '#4992E6', '#7D609A', '#A8502E', '#FEC210', '#A38E28'];\nconst textColor = '#333';\nconst textColorSecondary = '#666';\nexport const windTheme = {\n    color: colors6,\n    // backgroundColor: '#13161A',\n    textStyle: {},\n    title: {\n        textStyle: {\n            color: textColor,\n        },\n        subtextStyle: {\n            color: textColorSecondary,\n        },\n        left: 'center',\n    },\n    legend: {\n        textStyle: {\n            color: textColor,\n        },\n    },\n    tooltip: {\n        axisPointer: {\n            lineStyle: {\n                color: textColor,\n                width: '1',\n            },\n            crossStyle: {\n                color: textColor,\n                width: '1',\n            },\n        },\n    },\n    markPoint: {\n        label: {\n            normal: {\n                textStyle: {\n                    color: textColor,\n                },\n            },\n            emphasis: {\n                textStyle: {\n                    color: textColor,\n                },\n            },\n        },\n    },\n    categoryAxis: {\n        axisLine: {\n            // show: true,\n            lineStyle: {\n                color: textColorSecondary,\n            },\n        },\n        axisTick: {\n            // show: true,\n            lineStyle: {\n                color: textColorSecondary,\n            },\n        },\n        axisLabel: {\n            // show: true,\n            textStyle: {\n                color: textColorSecondary,\n            },\n        },\n        splitLine: {\n            // show: true,\n            lineStyle: {\n                color: [\n                    '#aaaaaa'\n                ],\n            },\n        },\n        splitArea: {\n            // show: false,\n            areaStyle: {\n                color: [\n                    '#eeeeee'\n                ],\n            },\n        },\n    },\n    valueAxis: {\n        axisLine: {\n            // show: true,\n            lineStyle: {\n                color: textColorSecondary,\n            },\n        },\n        axisTick: {\n            // show: true,\n            lineStyle: {\n                color: textColorSecondary,\n            },\n        },\n        axisLabel: {\n            // show: true,\n            textStyle: {\n                color: textColorSecondary,\n            },\n        },\n        splitLine: {\n            // show: true,\n            lineStyle: {\n                color: [\n                    '#aaaaaa'\n                ],\n            },\n        },\n        splitArea: {\n            // show: false,\n            areaStyle: {\n                color: [\n                    '#eeeeee'\n                ],\n            },\n        },\n    },\n};\nconst baseOption = {\n    title: {\n        text: '全球各大洲人口增长历史及预测',\n    },\n    graphic: {\n        elements: [\n            {\n                type: 'text',\n                style: {\n                    text: `数据来源: Wikipedia.org`,\n                    fill: '#666',\n                },\n                silent: true,\n                right: 16,\n                bottom: 8,\n            }\n        ],\n    },\n    xAxis: {\n        type: 'category',\n        data: ['1750', '1800', '1850', '1900', '1950', '1999', '2050'],\n    },\n    yAxis: {\n        name: '十亿',\n        labels: {\n            formatter() {\n                return this.value / 1000;\n            },\n        },\n    },\n    legend: {\n        show: true,\n        bottom: 8\n    },\n    // grid : {\n    //   bottom: 100\n    // },\n    tooltip: {\n        split: true,\n        valueSuffix: '百万',\n    },\n    series: [\n        {\n            \"name\": \"亚洲\",\n            type: \"bar\",\n            \"data\": [\n                502,\n                635,\n                809,\n                947,\n                1402,\n                3634,\n                5268\n            ]\n        },\n        {\n            \"name\": \"非洲\",\n            type: \"bar\",\n            \"data\": [\n                106,\n                107,\n                111,\n                133,\n                221,\n                767,\n                1766\n            ]\n        },\n        {\n            \"name\": \"欧洲\",\n            type: \"bar\",\n            \"data\": [\n                163,\n                203,\n                276,\n                408,\n                547,\n                729,\n                628\n            ]\n        },\n        {\n            \"name\": \"美洲\",\n            type: \"bar\",\n            \"data\": [\n                18,\n                31,\n                54,\n                156,\n                339,\n                818,\n                1201\n            ]\n        },\n        {\n            \"name\": \"大洋洲\",\n            type: \"bar\",\n            \"data\": [\n                2,\n                2,\n                2,\n                6,\n                13,\n                30,\n                46\n            ]\n        }\n    ],\n};\nexport class Charts extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            echarts: window.echarts,\n        };\n    }\n    componentDidMount() {\n        const { echarts } = this.state;\n        if (echarts == null) {\n            // 异步加载第三方库\n            scriptjs('/vendors/echarts/echarts.min.js', () => {\n                const { echarts: chart } = window;\n                chart.registerTheme('wind_theme', windTheme);\n                // 6种以上使用12色\n                chart.registerTheme('wind_theme2', Object.assign(Object.assign({}, windTheme), { color: colors12 }));\n                this.setState({\n                    echarts: chart,\n                });\n            });\n        }\n    }\n    render() {\n        const { props } = this;\n        const { echarts } = this.state;\n        const { option, placeholder = null } = props, restProps = __rest(props, [\"option\", \"placeholder\"]);\n        let theme = 'wind_theme';\n        if (option.series && option.series.length > 6) {\n            theme = 'wind_theme2';\n        }\n        // console.log('Charts render', option);\n        return (echarts\n            ? (<ReactEchartsCore echarts={echarts} theme={theme} {...restProps} option={option}/>) : placeholder);\n    }\n}\nCharts.propTypes = {\n    option: PropTypes.object.isRequired,\n    placeholder: PropTypes.node,\n};\nCharts.defaultProps = {\n    placeholder: null,\n};\nexport default class Chart extends React.Component {\n    render() {\n        // console.log('chart render ', series);\n        let option = Object.assign({}, baseOption);\n        return (<div>\r\n        <Charts option={option}/>\r\n      </div>);\n    }\n}\n"],"file":"chart.js"}