{"version":3,"sources":["mention/index.jsx"],"names":["React","RcMention","Nav","toString","toEditorState","getMentions","classNames","shallowequal","LoadingO","Mention","props","onSearchChange","value","prefix","defaultSearchChange","onChange","editorState","onFocus","ev","setState","focus","onBlur","mentionEle","_editor","mentionRef","ele","state","suggestions","nextProps","searchValue","toLowerCase","filteredSuggestions","filter","suggestion","indexOf","className","prefixCls","loading","cls","notFoundContent","Component","defaultProps","multiLines","toContentState","text","console","warn"],"mappings":"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","sourcesContent":["import React from 'react';\nimport RcMention, { Nav, toString, toEditorState, getMentions } from 'rc-editor-mention';\nimport classNames from 'classnames';\nimport shallowequal from 'shallowequal';\nimport LoadingO from '@wind/icons/lib/icons/LoadingO';\nexport default class Mention extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onSearchChange = (value, prefix) => {\n            if (this.props.onSearchChange) {\n                return this.props.onSearchChange(value, prefix);\n            }\n            return this.defaultSearchChange(value);\n        };\n        this.onChange = (editorState) => {\n            if (this.props.onChange) {\n                this.props.onChange(editorState);\n            }\n        };\n        this.onFocus = (ev) => {\n            this.setState({\n                focus: true,\n            });\n            if (this.props.onFocus) {\n                this.props.onFocus(ev);\n            }\n        };\n        this.onBlur = (ev) => {\n            this.setState({\n                focus: false,\n            });\n            if (this.props.onBlur) {\n                this.props.onBlur(ev);\n            }\n        };\n        this.focus = () => {\n            this.mentionEle._editor.focus();\n        };\n        this.mentionRef = ele => {\n            this.mentionEle = ele;\n        };\n        this.state = {\n            suggestions: props.suggestions,\n            focus: false,\n        };\n    }\n    componentWillReceiveProps(nextProps) {\n        const { suggestions } = nextProps;\n        if (!shallowequal(suggestions, this.props.suggestions)) {\n            this.setState({\n                suggestions,\n            });\n        }\n    }\n    defaultSearchChange(value) {\n        const searchValue = value.toLowerCase();\n        const filteredSuggestions = (this.props.suggestions || []).filter(suggestion => suggestion.toLowerCase().indexOf(searchValue) !== -1);\n        this.setState({\n            suggestions: filteredSuggestions,\n        });\n    }\n    render() {\n        const { className = '', prefixCls, loading } = this.props;\n        const { suggestions, focus } = this.state;\n        const cls = classNames(className, {\n            [`${prefixCls}-active`]: focus,\n        });\n        const notFoundContent = loading\n            ? <LoadingO />\n            : this.props.notFoundContent;\n        return (<RcMention {...this.props} className={cls} ref={this.mentionRef} onSearchChange={this.onSearchChange} onChange={this.onChange} onFocus={this.onFocus} onBlur={this.onBlur} suggestions={suggestions} notFoundContent={notFoundContent}/>);\n    }\n}\nMention.getMentions = getMentions;\nMention.defaultProps = {\n    prefixCls: 'w-mention',\n    notFoundContent: '无匹配结果，轻敲空格完成输入',\n    loading: false,\n    multiLines: false,\n};\nMention.Nav = Nav;\nMention.toString = toString;\nMention.toContentState = toEditorState;\nMention.toEditorState = text => {\n    console.warn('Mention.toEditorState is deprecated. Use toContentState instead.');\n    return toEditorState(text);\n};\n"],"file":"index.js"}