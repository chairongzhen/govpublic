{"version":3,"sources":["locale-provider/injectLocale.jsx"],"names":["PropTypes","componentName","defaultLocale","Component","_a","ComponentWithStatics","antLocale","context","localeFromContext","localeFromProps","props","locale","propTypes","defaultProps","contextTypes","object"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB,C,CACA;;AACA,gBAAe,UAACC,aAAD,EAAgBC,aAAhB;AAAA,SAAmC,UAAUC,SAAV,EAAqB;AACnE,QAAIC,EAAJ;;AACA,QAAMC,oBAAoB,GAAGF,SAA7B;AACA,WAAOC,EAAE;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,oCACW;AAAA,cACAE,SADA,GACc,KAAKC,OADnB,CACAD,SADA;AAER,cAAME,iBAAiB,GAAGF,SAAS,IAAIA,SAAS,CAACL,aAAD,CAAhD;AACA,cAAMQ,eAAe,GAAG,KAAKC,KAAL,CAAWC,MAAX,IAAqB,EAA7C;AACA,iBAAO,SAAc,SAAc,SAAc,EAAd,EAAkBT,aAAlB,CAAd,EAAiDM,iBAAiB,IAAI,EAAtE,CAAd,EAA0FC,eAA1F,CAAP;AACH;AANA;;AAAA;AAAA,MAAiBN,SAAjB,CAAF,EAQHC,EAAE,CAACQ,SAAH,GAAeP,oBAAoB,CAACO,SARjC,EASHR,EAAE,CAACS,YAAH,GAAkBR,oBAAoB,CAACQ,YATpC,EAUHT,EAAE,CAACU,YAAH,GAAkB,SAAc,SAAc,EAAd,EAAmBT,oBAAoB,CAACE,OAArB,IAAgC,EAAnD,CAAd,EAAuE;AAAED,MAAAA,SAAS,EAAEN,SAAS,CAACe;AAAvB,KAAvE,CAVf,EAWHX,EAXJ;AAYH,GAfc;AAAA,CAAf","sourcesContent":["import PropTypes from 'prop-types';\n// todo: 此方法会导致Component静态属性丢失，是否有好的替代方案？（本质上是为了getLocale的复用）\nexport default (componentName, defaultLocale) => (function (Component) {\n    var _a;\n    const ComponentWithStatics = Component;\n    return _a = class extends Component {\n            getLocale() {\n                const { antLocale } = this.context;\n                const localeFromContext = antLocale && antLocale[componentName];\n                const localeFromProps = this.props.locale || {};\n                return Object.assign(Object.assign(Object.assign({}, defaultLocale), (localeFromContext || {})), localeFromProps);\n            }\n        },\n        _a.propTypes = ComponentWithStatics.propTypes,\n        _a.defaultProps = ComponentWithStatics.defaultProps,\n        _a.contextTypes = Object.assign(Object.assign({}, (ComponentWithStatics.context || {})), { antLocale: PropTypes.object }),\n        _a;\n});\n"],"file":"injectLocale.js"}