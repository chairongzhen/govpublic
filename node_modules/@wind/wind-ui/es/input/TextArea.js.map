{"version":3,"sources":["input/TextArea.jsx"],"names":["React","omit","classNames","calculateNodeHeight","onNextFrame","cb","window","requestAnimationFrame","setTimeout","clearNextFrameAction","nextFrameId","cancelAnimationFrame","clearTimeout","TextArea","arguments","state","textareaStyles","resizeTextarea","autosize","props","textAreaRef","minRows","maxRows","setState","handleTextareaChange","e","onChange","handleKeyDown","onPressEnter","onKeyDown","keyCode","saveTextAreaRef","textArea","nextProps","value","nextFrameActionId","focus","blur","prefixCls","className","disabled","otherProps","style","getTextAreaClassName","Component","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport omit from 'omit.js';\nimport classNames from 'classnames';\nimport calculateNodeHeight from './calculateNodeHeight';\nfunction onNextFrame(cb) {\n    if (window.requestAnimationFrame) {\n        return window.requestAnimationFrame(cb);\n    }\n    return window.setTimeout(cb, 1);\n}\nfunction clearNextFrameAction(nextFrameId) {\n    if (window.cancelAnimationFrame) {\n        window.cancelAnimationFrame(nextFrameId);\n    }\n    else {\n        window.clearTimeout(nextFrameId);\n    }\n}\nexport default class TextArea extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            textareaStyles: {},\n        };\n        this.resizeTextarea = () => {\n            const { autosize } = this.props;\n            if (!autosize || !this.textAreaRef) {\n                return;\n            }\n            const minRows = autosize ? autosize.minRows : null;\n            const maxRows = autosize ? autosize.maxRows : null;\n            const textareaStyles = calculateNodeHeight(this.textAreaRef, false, minRows, maxRows);\n            this.setState({ textareaStyles });\n        };\n        this.handleTextareaChange = (e) => {\n            if (!('value' in this.props)) {\n                this.resizeTextarea();\n            }\n            const { onChange } = this.props;\n            if (onChange) {\n                onChange(e);\n            }\n        };\n        this.handleKeyDown = (e) => {\n            const { onPressEnter, onKeyDown } = this.props;\n            if (e.keyCode === 13 && onPressEnter) {\n                onPressEnter(e);\n            }\n            if (onKeyDown) {\n                onKeyDown(e);\n            }\n        };\n        this.saveTextAreaRef = (textArea) => {\n            this.textAreaRef = textArea;\n        };\n    }\n    componentDidMount() {\n        this.resizeTextarea();\n    }\n    componentWillReceiveProps(nextProps) {\n        // Re-render with the new content then recalculate the height as required.\n        if (this.props.value !== nextProps.value) {\n            if (this.nextFrameActionId) {\n                clearNextFrameAction(this.nextFrameActionId);\n            }\n            this.nextFrameActionId = onNextFrame(this.resizeTextarea);\n        }\n    }\n    focus() {\n        this.textAreaRef.focus();\n    }\n    blur() {\n        this.textAreaRef.blur();\n    }\n    getTextAreaClassName() {\n        const { prefixCls, className, disabled } = this.props;\n        return classNames(prefixCls, className, {\n            [`${prefixCls}-disabled`]: disabled,\n        });\n    }\n    render() {\n        const props = this.props;\n        const otherProps = omit(props, [\n            'prefixCls',\n            'onPressEnter',\n            'autosize',\n        ]);\n        const style = Object.assign(Object.assign({}, props.style), this.state.textareaStyles);\n        // Fix https://github.com/ant-design/ant-design/issues/6776\n        // Make sure it could be reset when using form.getFieldDecorator\n        if ('value' in otherProps) {\n            otherProps.value = otherProps.value || '';\n        }\n        return (<textarea {...otherProps} className={this.getTextAreaClassName()} style={style} onKeyDown={this.handleKeyDown} onChange={this.handleTextareaChange} ref={this.saveTextAreaRef}/>);\n    }\n}\nTextArea.defaultProps = {\n    prefixCls: 'w-input',\n};\n"],"file":"TextArea.js"}