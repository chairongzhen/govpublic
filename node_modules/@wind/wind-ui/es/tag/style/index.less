@import "../../style/themes/default";
@import "../../style/mixins/index";

@tag-prefix-cls: ~"@{ant-prefix}-tag";

.@{tag-prefix-cls} {
  display: inline-block;
  line-height: 18px;
  height: 20px;
  padding: 0 8px;
  border-radius: @border-radius-sm;
  border: @border-width-base @border-style-base @border-color-split;
  background: @tag-default-bg;
  font-size: @tag-font-size;
  transition: all 0.3s @ease-out;
  opacity: 1;
  margin-right: 8px;
  cursor: pointer;
  white-space: nowrap;
  text-align: center;

  // &:hover {
  //   opacity: 0.85;//small尺寸有模糊动画
  // }

  &,
  a,
  a:hover {
    color: @tag-default-color;
  }

  &-text {
    a:first-child:last-child {
      display: inline-block;
      margin: 0 -8px;
      padding: 0 8px;
    }
  }

  .@{iconfont-css-prefix}-close-o {
    cursor: pointer;
    margin-left: 3px;
    transition: all 0.3s @ease-out;
    opacity: 0.8;
    vertical-align: -2px;
    &:hover {
      opacity: 1;
    }
  }

  &-has-color {
    border-color: transparent;
    &,
    a,
    a:hover,
    .@{iconfont-css-prefix}-close-o,
    .@{iconfont-css-prefix}-close-o:hover {
      color: #fff;
    }
  }

  &-checkable {
    background-color: @tag-checkable-bg;
    border-color: transparent;
    &:hover {
      color: @primary-5;
      //border-color:@primary-5;
      //background-color: #fff;
    }
    &-checked {
      color: @primary-color;
      border-color:@primary-color;
      background-color:transparent;
    }
    // &-checked {
    //   background-color: @primary-6;
    // }
    &:active {
      color: @primary-7;
      border-color:@primary-7;
    }
  }

  &-close {
    width: 0 !important;
    padding: 0;
    margin: 0;
  }

  &-zoom-enter,
  &-zoom-appear {
    animation: antFadeIn .2s @ease-in-out-circ;
    animation-fill-mode: both;
  }

  &-zoom-leave {
    animation: antZoomOut .3s @ease-in-out-circ;
    animation-fill-mode: both;
  }

  @colors: pink, red, orange, yellow, cyan, green, blue, purple, blueGrey, grey;

  // mixin to iterate over colors and create CSS class for each one
  .make-color-classes(@i: length(@colors)) when (@i > 0) {
    .make-color-classes(@i - 1);
    @color: extract(@colors, @i);
    @lightColor: "@{color}-2";
    @darkColor: "@{color}-6";
    &-@{color} {
      color: @@darkColor;
      background: @@lightColor;
      border-color: @@darkColor;
    }
    &-@{color}-inverse {
      background: @@darkColor;
      border-color: @@darkColor;
      color: #fff;
    }
  }

  .make-color-classes();

  &-large {
    line-height: 22px;
    height: 24px;
    font-size:@font-size-lg
  }

  &-small {
    height: 18px;
    line-height: 16px;
    font-size: @font-size-sm;
    padding:0 4px;
  }
}
