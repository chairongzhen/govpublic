{"version":3,"sources":["tree-select/index.jsx"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","PropTypes","RcTreeSelect","TreeNode","SHOW_ALL","SHOW_PARENT","SHOW_CHILD","classNames","CloseCircleF","DownO","CloseO","renderSwitcherIcon","warning","TreeSelect","props","multiple","treeCheckable","antLocale","context","Select","notFoundContent","locale","getLocale","_a","prefixCls","className","size","dropdownStyle","restProps","cls","checkable","nodeProps","maxHeight","overflow","Component","defaultProps","transitionName","choiceTransitionName","showSearch","dropdownClassName","contextTypes","object"],"mappings":"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","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RcTreeSelect, { TreeNode, SHOW_ALL, SHOW_PARENT, SHOW_CHILD } from 'rc-tree-select';\nimport classNames from 'classnames';\nimport CloseCircleF from '@wind/icons/lib/icons/CloseCircleF';\nimport DownO from '@wind/icons/lib/icons/DownO';\nimport CloseO from '@wind/icons/lib/icons/CloseO';\nimport { renderSwitcherIcon } from '../tree/index';\nimport warning from '../_util/warning';\nclass TreeSelect extends React.Component {\n    constructor(props) {\n        super(props);\n        warning(props.multiple !== false || !props.treeCheckable, '`multiple` will alway be `true` when `treeCheckable` is true');\n    }\n    getLocale() {\n        const { antLocale } = this.context;\n        if (antLocale && antLocale.Select) {\n            return antLocale.Select;\n        }\n        return {\n            notFoundContent: '无匹配结果',\n        };\n    }\n    render() {\n        const locale = this.getLocale();\n        const _a = this.props, { prefixCls, className, size, notFoundContent = locale.notFoundContent, dropdownStyle } = _a, \n        // switcherIcon,\n        // showLine,\n        restProps = __rest(_a, [\"prefixCls\", \"className\", \"size\", \"notFoundContent\", \"dropdownStyle\"]);\n        const cls = classNames({\n            [`${prefixCls}-lg`]: size === 'large',\n            [`${prefixCls}-sm`]: size === 'small',\n        }, className);\n        let checkable = restProps.treeCheckable;\n        if (checkable) {\n            checkable = <span className={`${prefixCls}-tree-checkbox-inner`}/>;\n        }\n        return (<RcTreeSelect inputIcon={<DownO />} clearIcon={<CloseCircleF />} removeIcon={<CloseO />} switcherIcon={(nodeProps) => renderSwitcherIcon(prefixCls, null, false, nodeProps)} {...restProps} prefixCls={prefixCls} className={cls} dropdownStyle={Object.assign({ maxHeight: '100vh', overflow: 'auto' }, dropdownStyle)} treeCheckable={checkable} notFoundContent={notFoundContent}/>);\n    }\n}\nTreeSelect.TreeNode = TreeNode;\nTreeSelect.SHOW_ALL = SHOW_ALL;\nTreeSelect.SHOW_PARENT = SHOW_PARENT;\nTreeSelect.SHOW_CHILD = SHOW_CHILD;\nTreeSelect.defaultProps = {\n    prefixCls: 'w-select',\n    transitionName: 'slide-up',\n    choiceTransitionName: 'zoom',\n    showSearch: false,\n    dropdownClassName: 'w-select-tree-dropdown',\n};\nTreeSelect.contextTypes = {\n    antLocale: PropTypes.object,\n};\n// Use Select's locale\n// 使用 injectSelectLocale 逻辑上treeNode没有赋值过去(实际因为js继承比较特殊的原因实际上还是有的，但ts不认)\n// const injectSelectLocale = injectLocale('Select', {});\n// export default injectSelectLocale<TreeSelectProps>(TreeSelect as any);\nexport default TreeSelect;\n"],"file":"index.js"}