{"version":3,"sources":["auto-complete/index.jsx"],"names":["React","Option","OptGroup","classNames","Select","InputElement","isSelectOptionOrSelectOptGroup","child","type","isSelectOption","isSelectOptGroup","AutoComplete","props","size","className","notFoundContent","prefixCls","optionLabelProp","optionFilterProp","dataSource","children","options","inputElement","isCustomizeInput","isValidElement","Children","only","cls","childArray","toArray","length","map","item","value","text","Error","Component","defaultProps","transitionName","choiceTransitionName","showSearch","filterOption"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Option, OptGroup } from 'rc-select';\nimport classNames from 'classnames';\nimport Select from '../select';\nimport InputElement from './InputElement';\nfunction isSelectOptionOrSelectOptGroup(child) {\n    return child && child.type && (child.type.isSelectOption || child.type.isSelectOptGroup);\n}\nexport default class AutoComplete extends React.Component {\n    // getInputElement = () => {\n    //   const { children } = this.props;\n    //   const element: any = children && React.isValidElement(children) && children.type !== Option ?\n    //     React.Children.only(this.props.children) : <Input />;\n    //   return (\n    //     <InputElement {...element.props}>{element}</InputElement>\n    //   );\n    // }\n    render() {\n        let { size, className = '', notFoundContent, prefixCls, optionLabelProp, optionFilterProp, dataSource, children, } = this.props;\n        let options, inputElement = <InputElement><input /></InputElement>, isCustomizeInput = false;\n        if (children && React.isValidElement(children) && children.type !== Option) {\n            inputElement = <InputElement {...inputElement.props}>{React.Children.only(this.props.children)}</InputElement>;\n            isCustomizeInput = true;\n        }\n        const cls = classNames({\n            [`${prefixCls}-lg`]: size === 'large',\n            [`${prefixCls}-sm`]: size === 'small',\n            [className]: !!className,\n            [`${prefixCls}-show-search`]: true,\n            [`${prefixCls}-auto-complete`]: true,\n            [`${prefixCls}-customize-input`]: isCustomizeInput,\n        });\n        const childArray = React.Children.toArray(children);\n        if (childArray.length &&\n            isSelectOptionOrSelectOptGroup(childArray[0])) {\n            options = children;\n        }\n        else {\n            options = dataSource ? dataSource.map((item) => {\n                if (React.isValidElement(item)) {\n                    return item;\n                }\n                switch (typeof item) {\n                    case 'string':\n                        return <Option key={item}>{item}</Option>;\n                    case 'object':\n                        return (<Option key={item.value}>\n                {item.text}\n              </Option>);\n                    default:\n                        throw new Error('AutoComplete[dataSource] only supports type `string[] | Object[]`.');\n                }\n            }) : [];\n        }\n        return (<Select {...this.props} className={cls} mode=\"combobox\" optionLabelProp={optionLabelProp} optionFilterProp={optionFilterProp} getInputElement={() => inputElement} notFoundContent={notFoundContent}>\n        {options}\n      </Select>);\n    }\n}\nAutoComplete.Option = Option;\nAutoComplete.OptGroup = OptGroup;\nAutoComplete.defaultProps = {\n    prefixCls: 'w-select',\n    transitionName: 'slide-up',\n    optionLabelProp: 'children',\n    choiceTransitionName: 'zoom',\n    showSearch: false,\n    filterOption: false,\n};\n"],"file":"index.js"}