"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _tooltip = _interopRequireDefault(require("../tooltip"));

var _ExclamationCircleF = _interopRequireDefault(require("@wind/icons/lib/icons/ExclamationCircleF"));

var _button = _interopRequireDefault(require("../button"));

var _injectLocale = _interopRequireDefault(require("../locale-provider/injectLocale"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var __rest = void 0 && (void 0).__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};

var Popconfirm = /*#__PURE__*/function (_React$Component) {
  _inherits(Popconfirm, _React$Component);

  var _super = _createSuper(Popconfirm);

  function Popconfirm(props) {
    var _this;

    _classCallCheck(this, Popconfirm);

    _this = _super.call(this, props);

    _this.onConfirm = function (e) {
      _this.setVisible(false);

      var onConfirm = _this.props.onConfirm;

      if (onConfirm) {
        onConfirm.call(_assertThisInitialized(_this), e);
      }
    };

    _this.onCancel = function (e) {
      _this.setVisible(false);

      var onCancel = _this.props.onCancel;

      if (onCancel) {
        onCancel.call(_assertThisInitialized(_this), e);
      }
    };

    _this.onVisibleChange = function (visible) {
      _this.setVisible(visible);
    };

    _this.state = {
      visible: props.visible
    };
    return _this;
  }

  _createClass(Popconfirm, [{
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      if ('visible' in nextProps) {
        this.setState({
          visible: nextProps.visible
        });
      }
    }
  }, {
    key: "getPopupDomNode",
    value: function getPopupDomNode() {
      return this.refs.tooltip.getPopupDomNode();
    }
  }, {
    key: "setVisible",
    value: function setVisible(visible) {
      var props = this.props;

      if (!('visible' in props)) {
        this.setState({
          visible: visible
        });
      }

      var onVisibleChange = props.onVisibleChange;

      if (onVisibleChange) {
        onVisibleChange(visible);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _a = this.props,
          prefixCls = _a.prefixCls,
          title = _a.title,
          placement = _a.placement,
          okText = _a.okText,
          cancelText = _a.cancelText,
          restProps = __rest(_a, ["prefixCls", "title", "placement", "okText", "cancelText"]);

      var popconfirmLocale = this.getLocale();

      var overlay = /*#__PURE__*/_react["default"].createElement("div", null, /*#__PURE__*/_react["default"].createElement("div", {
        className: "".concat(prefixCls, "-inner-content")
      }, /*#__PURE__*/_react["default"].createElement("div", {
        className: "".concat(prefixCls, "-message")
      }, /*#__PURE__*/_react["default"].createElement(_ExclamationCircleF["default"], null), /*#__PURE__*/_react["default"].createElement("div", {
        className: "".concat(prefixCls, "-message-title")
      }, title)), /*#__PURE__*/_react["default"].createElement("div", {
        className: "".concat(prefixCls, "-buttons")
      }, /*#__PURE__*/_react["default"].createElement(_button["default"], {
        onClick: this.onCancel,
        size: "small"
      }, cancelText || popconfirmLocale.cancelText), /*#__PURE__*/_react["default"].createElement(_button["default"], {
        onClick: this.onConfirm,
        type: "primary",
        size: "small"
      }, okText || popconfirmLocale.okText))));

      return /*#__PURE__*/_react["default"].createElement(_tooltip["default"], _extends({}, restProps, {
        prefixCls: prefixCls,
        placement: placement,
        onVisibleChange: this.onVisibleChange,
        visible: this.state.visible,
        overlay: overlay,
        ref: "tooltip"
      }));
    }
  }]);

  return Popconfirm;
}(_react["default"].Component);

Popconfirm.defaultProps = {
  prefixCls: 'w-popover',
  transitionName: 'zoom-big',
  placement: 'top',
  trigger: 'click'
};
var injectPopconfirmLocale = (0, _injectLocale["default"])('Popconfirm', {
  cancelText: '取消',
  okText: '确定'
});

var _default = injectPopconfirmLocale(Popconfirm);

exports["default"] = _default;
//# sourceMappingURL=index.js.map
