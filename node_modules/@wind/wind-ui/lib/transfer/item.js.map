{"version":3,"sources":["transfer/item.jsx"],"names":["Item","args","PureRenderMixin","shouldComponentUpdate","apply","props","renderedText","renderedEl","item","checked","prefixCls","onClick","style","className","disabled","listItem","undefined","React","Component"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;IACqBA,I;;;;;;;;;;;;;4CACc;AAAA,wCAANC,IAAM;AAANA,QAAAA,IAAM;AAAA;;AAC3B,aAAOC,4BAAgBC,qBAAhB,CAAsCC,KAAtC,CAA4C,IAA5C,EAAkDH,IAAlD,CAAP;AACH;;;6BACQ;AAAA;;AAAA,wBAC0E,KAAKI,KAD/E;AAAA,UACGC,YADH,eACGA,YADH;AAAA,UACiBC,UADjB,eACiBA,UADjB;AAAA,UAC6BC,IAD7B,eAC6BA,IAD7B;AAAA,UACmCC,OADnC,eACmCA,OADnC;AAAA,UAC4CC,SAD5C,eAC4CA,SAD5C;AAAA,UACuDC,OADvD,eACuDA,OADvD;AAAA,UACgEC,KADhE,eACgEA,KADhE;AAEL,UAAMC,SAAS,GAAG,sFACVH,SADU,oBACiB,IADjB,0CAEVA,SAFU,6BAE0BF,IAAI,CAACM,QAF/B,gBAAlB;;AAIA,UAAMC,QAAQ,gBAAI;AAAK,QAAA,SAAS,EAAEF,SAAhB;AAA2B,QAAA,KAAK,EAAEP,YAAlC;AAAgD,QAAA,KAAK,EAAEM,KAAvD;AAA8D,QAAA,OAAO,EAAEJ,IAAI,CAACM,QAAL,GAAgBE,SAAhB,GAA4B;AAAA,iBAAML,OAAO,CAACH,IAAD,CAAb;AAAA;AAAnG,sBAClB,gCAAC,oBAAD;AAAU,QAAA,OAAO,EAAEC,OAAnB;AAA4B,QAAA,QAAQ,EAAED,IAAI,CAACM;AAA3C,QADkB,eAElB,8CAAOP,UAAP,CAFkB,CAAlB,CANK,CAUL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,aAAOQ,QAAP;AACH;;;;EA5B6BE,kBAAMC,S","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport PureRenderMixin from 'rc-util/lib/PureRenderMixin';\n// import Lazyload from 'react-lazy-load';\nimport Checkbox from '../checkbox';\nexport default class Item extends React.Component {\n    shouldComponentUpdate(...args) {\n        return PureRenderMixin.shouldComponentUpdate.apply(this, args);\n    }\n    render() {\n        const { renderedText, renderedEl, item, checked, prefixCls, onClick, style } = this.props;\n        const className = classNames({\n            [`${prefixCls}-content-item`]: true,\n            [`${prefixCls}-content-item-disabled`]: item.disabled,\n        });\n        const listItem = (<div className={className} title={renderedText} style={style} onClick={item.disabled ? undefined : () => onClick(item)}>\r\n        <Checkbox checked={checked} disabled={item.disabled}/>\r\n        <span>{renderedEl}</span>\r\n      </div>);\n        // let children: JSX.Element | null = null;\n        // if (lazy) {\n        //   const lazyProps = {\n        //     height: 32,\n        //     offset: 500,\n        //     throttle: 0,\n        //     debounce: false,\n        //     ...lazy,\n        //   };\n        //   children = <Lazyload {...lazyProps}>{listItem}</Lazyload>;\n        // } else {\n        //   children = listItem;\n        // }\n        return listItem;\n    }\n}\n"],"file":"item.js"}