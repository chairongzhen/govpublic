{"version":3,"sources":["transfer/index.jsx"],"names":["noop","Transfer","props","moveTo","direction","targetKeys","dataSource","onChange","state","sourceSelectedKeys","targetSelectedKeys","moveKeys","newMoveKeys","filter","key","some","data","disabled","newTargetKeys","concat","targetKey","indexOf","oppositeDirection","setState","getSelectedKeysName","handleSelectChange","moveToLeft","moveToRight","handleSelectAll","filteredDataSource","checkAll","originalSelectedKeys","currentKeys","map","item","newKeys1","newKeys2","forEach","push","holder","selectedKeys","handleLeftSelectAll","handleRightSelectAll","handleFilter","e","target","value","onSearchChange","handleLeftFilter","handleRightFilter","handleClear","handleLeftClear","handleRightClear","handleSelect","selectedItem","checked","index","splice","handleLeftSelect","handleRightSelect","handleScroll","onScroll","handleLeftScroll","handleRightScroll","leftFilter","rightFilter","nextProps","splitedDataSource","newSourceSelectedKeys","newTargetSelectedKeys","includes","rowKey","leftDataSource","rightDataSource","Array","length","record","indexOfKey","onSelectChange","titles","transferLocale","getLocale","locale","prefixCls","className","operations","showSearch","notFoundContent","searchPlaceholder","body","footer","listStyle","filterOption","render","lazy","splitDataSource","leftActive","rightActive","cls","getTitles","itemUnit","itemsUnit","selectAll","React","Component","List","Operation","Search","defaultProps","propTypes","PropTypes","string","array","func","height","number","object","bool","node","oneOfType","injectTransferLocale"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport List from './list';\nimport Operation from './operation';\nimport Search from './search';\nimport injectLocale from '../locale-provider/injectLocale';\nfunction noop() {\n}\nclass Transfer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.moveTo = (direction) => {\n            const { targetKeys = [], dataSource = [], onChange } = this.props;\n            const { sourceSelectedKeys, targetSelectedKeys } = this.state;\n            const moveKeys = direction === 'right' ? sourceSelectedKeys : targetSelectedKeys;\n            // filter the disabled options\n            const newMoveKeys = moveKeys.filter(key => !dataSource.some(data => !!(key === data.key && data.disabled)));\n            // move items to target box\n            const newTargetKeys = direction === 'right'\n                ? newMoveKeys.concat(targetKeys)\n                : targetKeys.filter(targetKey => newMoveKeys.indexOf(targetKey) === -1);\n            // empty checked keys\n            const oppositeDirection = direction === 'right' ? 'left' : 'right';\n            this.setState({\n                [this.getSelectedKeysName(oppositeDirection)]: [],\n            });\n            this.handleSelectChange(oppositeDirection, []);\n            if (onChange) {\n                onChange(newTargetKeys, direction, newMoveKeys);\n            }\n        };\n        this.moveToLeft = () => this.moveTo('left');\n        this.moveToRight = () => this.moveTo('right');\n        this.handleSelectAll = (direction, filteredDataSource, checkAll) => {\n            const originalSelectedKeys = this.state[this.getSelectedKeysName(direction)] || [];\n            const currentKeys = filteredDataSource.map(item => item.key);\n            // Only operate current keys from original selected keys\n            const newKeys1 = originalSelectedKeys.filter(key => currentKeys.indexOf(key) === -1);\n            const newKeys2 = [...originalSelectedKeys];\n            currentKeys.forEach((key) => {\n                if (newKeys2.indexOf(key) === -1) {\n                    newKeys2.push(key);\n                }\n            });\n            const holder = checkAll ? newKeys1 : newKeys2;\n            this.handleSelectChange(direction, holder);\n            if (!this.props.selectedKeys) {\n                this.setState({\n                    [this.getSelectedKeysName(direction)]: holder,\n                });\n            }\n        };\n        this.handleLeftSelectAll = (filteredDataSource, checkAll) => (this.handleSelectAll('left', filteredDataSource, checkAll));\n        this.handleRightSelectAll = (filteredDataSource, checkAll) => (this.handleSelectAll('right', filteredDataSource, checkAll));\n        this.handleFilter = (direction, e) => {\n            this.setState({\n                // add filter\n                [`${direction}Filter`]: e.target.value,\n            });\n            if (this.props.onSearchChange) {\n                this.props.onSearchChange(direction, e);\n            }\n        };\n        this.handleLeftFilter = (e) => this.handleFilter('left', e);\n        this.handleRightFilter = (e) => this.handleFilter('right', e);\n        this.handleClear = (direction) => {\n            this.setState({\n                [`${direction}Filter`]: '',\n            });\n        };\n        this.handleLeftClear = () => this.handleClear('left');\n        this.handleRightClear = () => this.handleClear('right');\n        this.handleSelect = (direction, selectedItem, checked) => {\n            const { sourceSelectedKeys, targetSelectedKeys } = this.state;\n            const holder = direction === 'left' ? [...sourceSelectedKeys] : [...targetSelectedKeys];\n            const index = holder.indexOf(selectedItem.key);\n            if (index > -1) {\n                holder.splice(index, 1);\n            }\n            if (checked) {\n                holder.push(selectedItem.key);\n            }\n            this.handleSelectChange(direction, holder);\n            if (!this.props.selectedKeys) {\n                this.setState({\n                    [this.getSelectedKeysName(direction)]: holder,\n                });\n            }\n        };\n        this.handleLeftSelect = (selectedItem, checked) => this.handleSelect('left', selectedItem, checked);\n        this.handleRightSelect = (selectedItem, checked) => this.handleSelect('right', selectedItem, checked);\n        this.handleScroll = (direction, e) => {\n            const { onScroll } = this.props;\n            if (onScroll) {\n                onScroll(direction, e);\n            }\n        };\n        this.handleLeftScroll = (e) => this.handleScroll('left', e);\n        this.handleRightScroll = (e) => this.handleScroll('right', e);\n        const { selectedKeys = [], targetKeys = [] } = props;\n        this.state = {\n            leftFilter: '',\n            rightFilter: '',\n            sourceSelectedKeys: selectedKeys.filter(key => targetKeys.indexOf(key) === -1),\n            targetSelectedKeys: selectedKeys.filter(key => targetKeys.indexOf(key) > -1),\n        };\n    }\n    componentWillReceiveProps(nextProps) {\n        const { sourceSelectedKeys, targetSelectedKeys } = this.state;\n        if (nextProps.targetKeys !== this.props.targetKeys ||\n            nextProps.dataSource !== this.props.dataSource) {\n            // clear cached splited dataSource\n            this.splitedDataSource = null;\n            if (!nextProps.selectedKeys) {\n                // clear key nolonger existed\n                // clear checkedKeys according to targetKeys\n                const { dataSource, targetKeys = [] } = nextProps;\n                const newSourceSelectedKeys = [];\n                const newTargetSelectedKeys = [];\n                dataSource.forEach(({ key }) => {\n                    if (sourceSelectedKeys.includes(key) && !targetKeys.includes(key)) {\n                        newSourceSelectedKeys.push(key);\n                    }\n                    if (targetSelectedKeys.includes(key) && targetKeys.includes(key)) {\n                        newTargetSelectedKeys.push(key);\n                    }\n                });\n                this.setState({\n                    sourceSelectedKeys: newSourceSelectedKeys,\n                    targetSelectedKeys: newTargetSelectedKeys,\n                });\n            }\n        }\n        if (nextProps.selectedKeys) {\n            const targetKeys = nextProps.targetKeys;\n            this.setState({\n                sourceSelectedKeys: nextProps.selectedKeys.filter(key => !targetKeys.includes(key)),\n                targetSelectedKeys: nextProps.selectedKeys.filter(key => targetKeys.includes(key)),\n            });\n        }\n    }\n    splitDataSource(props) {\n        if (this.splitedDataSource) {\n            return this.splitedDataSource;\n        }\n        const { dataSource, rowKey, targetKeys = [] } = props;\n        const leftDataSource = [];\n        const rightDataSource = new Array(targetKeys.length);\n        dataSource.forEach(record => {\n            if (rowKey) {\n                record.key = rowKey(record);\n            }\n            // rightDataSource should be ordered by targetKeys\n            // leftDataSource should be ordered by dataSource\n            const indexOfKey = targetKeys.indexOf(record.key);\n            if (indexOfKey !== -1) {\n                rightDataSource[indexOfKey] = record;\n            }\n            else {\n                leftDataSource.push(record);\n            }\n        });\n        this.splitedDataSource = {\n            leftDataSource,\n            rightDataSource,\n        };\n        return this.splitedDataSource;\n    }\n    handleSelectChange(direction, holder) {\n        const { sourceSelectedKeys, targetSelectedKeys } = this.state;\n        const onSelectChange = this.props.onSelectChange;\n        if (!onSelectChange) {\n            return;\n        }\n        if (direction === 'left') {\n            onSelectChange(holder, targetSelectedKeys);\n        }\n        else {\n            onSelectChange(sourceSelectedKeys, holder);\n        }\n    }\n    getTitles() {\n        const { props } = this;\n        if (props.titles) {\n            return props.titles;\n        }\n        const transferLocale = this.getLocale();\n        return transferLocale.titles;\n    }\n    getSelectedKeysName(direction) {\n        return direction === 'left' ? 'sourceSelectedKeys' : 'targetSelectedKeys';\n    }\n    render() {\n        const locale = this.getLocale();\n        const { prefixCls = 'w-transfer', className, operations = [], showSearch, notFoundContent = locale.notFoundContent, searchPlaceholder = locale.searchPlaceholder, body, footer, listStyle, filterOption, render, lazy, } = this.props;\n        const { leftFilter, rightFilter, sourceSelectedKeys, targetSelectedKeys } = this.state;\n        const { leftDataSource, rightDataSource } = this.splitDataSource(this.props);\n        const leftActive = targetSelectedKeys.length > 0;\n        const rightActive = sourceSelectedKeys.length > 0;\n        const cls = classNames(className, prefixCls);\n        const titles = this.getTitles();\n        return (<div className={cls}>\n        <List prefixCls={`${prefixCls}-list`} titleText={titles[0]} dataSource={leftDataSource} filter={leftFilter} filterOption={filterOption} style={listStyle} checkedKeys={sourceSelectedKeys} handleFilter={this.handleLeftFilter} handleClear={this.handleLeftClear} handleSelect={this.handleLeftSelect} handleSelectAll={this.handleLeftSelectAll} render={render} showSearch={showSearch} searchPlaceholder={searchPlaceholder} notFoundContent={notFoundContent} itemUnit={locale.itemUnit} itemsUnit={locale.itemsUnit} selectAllText={locale.selectAll} body={body} footer={footer} lazy={lazy} onScroll={this.handleLeftScroll}/>\n        <Operation className={`${prefixCls}-operation`} rightActive={rightActive} rightArrowText={operations[0]} moveToRight={this.moveToRight} leftActive={leftActive} leftArrowText={operations[1]} moveToLeft={this.moveToLeft}/>\n        <List prefixCls={`${prefixCls}-list`} titleText={titles[1]} dataSource={rightDataSource} filter={rightFilter} filterOption={filterOption} style={listStyle} checkedKeys={targetSelectedKeys} handleFilter={this.handleRightFilter} handleClear={this.handleRightClear} handleSelect={this.handleRightSelect} handleSelectAll={this.handleRightSelectAll} render={render} showSearch={showSearch} searchPlaceholder={searchPlaceholder} notFoundContent={notFoundContent} itemUnit={locale.itemUnit} itemsUnit={locale.itemsUnit} selectAllText={locale.selectAll} body={body} footer={footer} lazy={lazy} onScroll={this.handleRightScroll}/>\n      </div>);\n    }\n}\n// For high-level customized Transfer @dqaria\nTransfer.List = List;\nTransfer.Operation = Operation;\nTransfer.Search = Search;\nTransfer.defaultProps = {\n    dataSource: [],\n    render: noop,\n    showSearch: false,\n};\nTransfer.propTypes = {\n    prefixCls: PropTypes.string,\n    dataSource: PropTypes.array,\n    render: PropTypes.func,\n    targetKeys: PropTypes.array,\n    onChange: PropTypes.func,\n    height: PropTypes.number,\n    listStyle: PropTypes.object,\n    className: PropTypes.string,\n    titles: PropTypes.array,\n    operations: PropTypes.array,\n    showSearch: PropTypes.bool,\n    filterOption: PropTypes.func,\n    searchPlaceholder: PropTypes.string,\n    notFoundContent: PropTypes.node,\n    body: PropTypes.func,\n    footer: PropTypes.func,\n    rowKey: PropTypes.func,\n    lazy: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n};\nconst injectTransferLocale = injectLocale('Transfer', {\n    titles: ['', ''],\n    searchPlaceholder: '请输入搜索内容',\n    notFoundContent: '列表为空',\n    itemUnit: '项',\n    itemsUnit: '项',\n    selectAll: '全选',\n});\nexport default injectTransferLocale(Transfer);\n"],"file":"index.js"}