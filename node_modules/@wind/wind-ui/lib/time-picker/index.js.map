{"version":3,"sources":["time-picker/index.jsx"],"names":["generateShowHourMinuteSecond","format","showHour","indexOf","showMinute","showSecond","TimePicker","props","handleChange","value","setState","onChange","handleOpenClose","open","onOpenChange","saveTimePicker","timePickerRef","defaultValue","moment","isMoment","Error","state","nextProps","focus","use12Hours","getDefaultFormat","className","prefixCls","size","addon","panel","placeholder","undefined","getLocale","React","Component","defaultProps","align","offset","disabled","disabledHours","disabledMinutes","disabledSeconds","hideDisabledOptions","placement","transitionName","injectTimePickerLocale","defaultLocale"],"mappings":"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","sourcesContent":["import React from 'react';\nimport moment from 'moment';\nimport RcTimePicker from 'rc-time-picker/lib/TimePicker';\nimport classNames from 'classnames';\nimport ClockO from '@wind/icons/lib/icons/ClockO';\nimport CloseCircleF from '@wind/icons/lib/icons/CloseCircleF';\nimport injectLocale from '../locale-provider/injectLocale';\nimport defaultLocale from './locale/zh_CN';\nexport function generateShowHourMinuteSecond(format) {\n    // Ref: http://momentjs.com/docs/#/parsing/string-format/\n    return {\n        showHour: (format.indexOf('H') > -1 ||\n            format.indexOf('h') > -1 ||\n            format.indexOf('k') > -1),\n        showMinute: format.indexOf('m') > -1,\n        showSecond: format.indexOf('s') > -1,\n    };\n}\nclass TimePicker extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = (value) => {\n            if (!('value' in this.props)) {\n                this.setState({ value });\n            }\n            const { onChange, format = 'HH:mm:ss' } = this.props;\n            if (onChange) {\n                onChange(value, (value && value.format(format)) || '');\n            }\n        };\n        this.handleOpenClose = ({ open }) => {\n            const { onOpenChange } = this.props;\n            if (onOpenChange) {\n                onOpenChange(open);\n            }\n        };\n        this.saveTimePicker = (timePickerRef) => {\n            this.timePickerRef = timePickerRef;\n        };\n        const value = props.value || props.defaultValue;\n        if (value && !moment.isMoment(value)) {\n            throw new Error('The value/defaultValue of TimePicker must be a moment object after `antd@2.0`, ' +\n                'see: https://u.ant.design/time-picker-value');\n        }\n        this.state = {\n            value,\n        };\n    }\n    componentWillReceiveProps(nextProps) {\n        if ('value' in nextProps) {\n            this.setState({ value: nextProps.value });\n        }\n    }\n    focus() {\n        this.timePickerRef.focus();\n    }\n    getDefaultFormat() {\n        const { format, use12Hours } = this.props;\n        if (format) {\n            return format;\n        }\n        else if (use12Hours) {\n            return 'h:mm:ss a';\n        }\n        return 'HH:mm:ss';\n    }\n    render() {\n        const props = Object.assign({}, this.props);\n        delete props.defaultValue;\n        const format = this.getDefaultFormat();\n        const className = classNames(props.className, {\n            [`${props.prefixCls}-${props.size}`]: !!props.size,\n        });\n        const addon = (panel) => (props.addon ? (<div className={`${props.prefixCls}-panel-addon`}>\n          {props.addon(panel)}\n        </div>) : null);\n        return (<RcTimePicker {...generateShowHourMinuteSecond(format)} inputIcon={<span className={`${props.prefixCls}-icon`}><ClockO /></span>} clearIcon={<span className={`${props.prefixCls}-clear-btn`}><CloseCircleF /></span>} {...props} ref={this.saveTimePicker} format={format} className={className} value={this.state.value} placeholder={props.placeholder === undefined ? this.getLocale().placeholder : props.placeholder} onChange={this.handleChange} onOpen={this.handleOpenClose} onClose={this.handleOpenClose} addon={addon}/>);\n    }\n}\nTimePicker.defaultProps = {\n    prefixCls: 'w-time-picker',\n    align: {\n        offset: [0, -2],\n    },\n    disabled: false,\n    disabledHours: undefined,\n    disabledMinutes: undefined,\n    disabledSeconds: undefined,\n    hideDisabledOptions: false,\n    placement: 'bottomLeft',\n    transitionName: 'slide-up',\n};\nconst injectTimePickerLocale = injectLocale('TimePicker', defaultLocale);\nexport default injectTimePickerLocale(TimePicker);\n"],"file":"index.js"}