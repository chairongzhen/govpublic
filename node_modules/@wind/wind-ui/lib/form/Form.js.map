{"version":3,"sources":["form/Form.jsx"],"names":["Form","props","form","args","PureRenderMixin","shouldComponentUpdate","apply","layout","vertical","prefixCls","hideRequiredMark","className","inline","horizontal","formClassName","formProps","React","Component","defaultProps","onSubmit","e","preventDefault","propTypes","PropTypes","string","oneOf","children","any","func","bool","childContextTypes","Item","FormItem","create","options","formWrapper","fieldNameProp","fieldMetaProp","FIELD_META_PROP","object","isRequired","getChildContext","componentWillMount","__getFieldProps","getFieldProps","deprecatedGetFieldProps","name","option","render","withRef","ref","wrappedComponentRef"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport createDOMForm from 'rc-form/lib/createDOMForm';\nimport PureRenderMixin from 'rc-util/lib/PureRenderMixin';\nimport omit from 'omit.js';\nimport createReactClass from 'create-react-class';\nimport warning from '../_util/warning';\nimport FormItem from './FormItem';\nimport { FIELD_META_PROP } from './constants';\nexport default class Form extends React.Component {\n    constructor(props) {\n        super(props);\n        warning(!props.form, 'It is unnecessary to pass `form` to `Form` after antd@1.7.0.');\n    }\n    shouldComponentUpdate(...args) {\n        return PureRenderMixin.shouldComponentUpdate.apply(this, args);\n    }\n    getChildContext() {\n        const { layout, vertical } = this.props;\n        return {\n            vertical: layout === 'vertical' || vertical,\n        };\n    }\n    render() {\n        const { prefixCls, hideRequiredMark, className = '', layout, \n        // @deprecated\n        inline, horizontal, vertical, } = this.props;\n        warning(!inline && !horizontal && !vertical, '`Form[inline|horizontal|vertical]` is deprecated, please use `Form[layout]` instead.');\n        const formClassName = classNames(prefixCls, {\n            [`${prefixCls}-horizontal`]: (!inline && !vertical && layout === 'horizontal') || horizontal,\n            [`${prefixCls}-vertical`]: layout === 'vertical' || vertical,\n            [`${prefixCls}-inline`]: layout === 'inline' || inline,\n            [`${prefixCls}-hide-required-mark`]: hideRequiredMark,\n        }, className);\n        const formProps = omit(this.props, [\n            'prefixCls',\n            'className',\n            'layout',\n            'inline',\n            'horizontal',\n            'vertical',\n            'form',\n            'hideRequiredMark',\n        ]);\n        return <form {...formProps} className={formClassName}/>;\n    }\n}\nForm.defaultProps = {\n    prefixCls: 'w-form',\n    layout: 'horizontal',\n    hideRequiredMark: false,\n    onSubmit(e) {\n        e.preventDefault();\n    },\n};\nForm.propTypes = {\n    prefixCls: PropTypes.string,\n    layout: PropTypes.oneOf(['horizontal', 'inline', 'vertical']),\n    children: PropTypes.any,\n    onSubmit: PropTypes.func,\n    hideRequiredMark: PropTypes.bool,\n};\nForm.childContextTypes = {\n    vertical: PropTypes.bool,\n};\nForm.Item = FormItem;\nForm.create = function (options = {}) {\n    const formWrapper = createDOMForm(Object.assign(Object.assign({ fieldNameProp: 'id' }, options), { fieldMetaProp: FIELD_META_PROP }));\n    /* eslint-disable react/prefer-es6-class */\n    return (Component) => formWrapper(createReactClass({\n        propTypes: {\n            form: PropTypes.object.isRequired,\n        },\n        childContextTypes: {\n            form: PropTypes.object.isRequired,\n        },\n        getChildContext() {\n            return {\n                form: this.props.form,\n            };\n        },\n        componentWillMount() {\n            this.__getFieldProps = this.props.form.getFieldProps;\n        },\n        deprecatedGetFieldProps(name, option) {\n            warning(false, '`getFieldProps` is not recommended, please use `getFieldDecorator` instead, ' +\n                'see: https://u.ant.design/get-field-decorator');\n            return this.__getFieldProps(name, option);\n        },\n        render() {\n            this.props.form.getFieldProps = this.deprecatedGetFieldProps;\n            const withRef = {};\n            if (options.withRef) {\n                withRef.ref = 'formWrappedComponent';\n            }\n            else if (this.props.wrappedComponentRef) {\n                withRef.ref = this.props.wrappedComponentRef;\n            }\n            return <Component {...this.props} {...withRef}/>;\n        },\n    }));\n};\n"],"file":"Form.js"}