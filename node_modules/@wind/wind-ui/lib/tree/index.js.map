{"version":3,"sources":["tree/index.jsx"],"names":["TreeNode","props","React","Component","renderSwitcherIcon","prefixCls","switcherIcon","showLine","isLeaf","expanded","loading","switcherCls","isValidElement","cloneElement","className","Tree","theme","checkable","nodeProps","children","RcTreeNode","defaultProps","showIcon","openAnimation","animation"],"mappings":";;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IACaA,Q;;;;;;;;;;;;;6BACA;AACL,0BAAO,gCAAC,QAAD,EAAc,KAAKC,KAAnB,CAAP;AACH;;;;EAHyBC,kBAAMC,S;;;;AAK7B,SAASC,kBAAT,CAA4BC,SAA5B,EAAuCC,YAAvC,EAAqDC,QAArD,QAA8F;AAAA,MAA7BC,MAA6B,QAA7BA,MAA6B;AAAA,MAArBC,QAAqB,QAArBA,QAAqB;AAAA,MAAXC,OAAW,QAAXA,OAAW;;AACjG,MAAIA,OAAJ,EAAa;AACT,wBAAO,gCAAC,oBAAD;AAAU,MAAA,SAAS,YAAKL,SAAL;AAAnB,MAAP;AACH;;AACD,MAAIG,MAAJ,EAAY;AACR,WAAOD,QAAQ,gBAAG,gCAAC,iBAAD;AAAO,MAAA,SAAS,YAAKF,SAAL;AAAhB,MAAH,GAA4D,IAA3E;AACH;;AACD,MAAMM,WAAW,aAAMN,SAAN,mBAAjB;;AACA,oBAAIH,kBAAMU,cAAN,CAAqBN,YAArB,CAAJ,EAAwC;AACpC,wBAAOJ,kBAAMW,YAAN,CAAmBP,YAAnB,EAAiC;AACpCQ,MAAAA,SAAS,EAAE,4BAAWR,YAAY,CAACL,KAAb,CAAmBa,SAAnB,IAAgC,EAA3C,EAA+CH,WAA/C;AADyB,KAAjC,CAAP;AAGH;;AACD,MAAIL,YAAJ,EAAkB;AACd,WAAOA,YAAP;AACH;;AACD,MAAIC,QAAJ,EAAc;AACV,WAAOE,QAAQ,gBAAI,gCAAC,wBAAD;AAAc,MAAA,SAAS,YAAKJ,SAAL;AAAvB,MAAJ,gBAA6E,gCAAC,uBAAD;AAAa,MAAA,SAAS,YAAKA,SAAL;AAAtB,MAA5F;AACH;;AACD,sBAAO,gCAAC,sBAAD;AAAY,IAAA,SAAS,EAAE,4BAAWM,WAAX,EAAwB,MAAxB;AAAvB,IAAP;AACH,C,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;IACqBI,I;;;;;;;;;;;;;6BACR;AACL,UAAMd,KAAK,GAAG,KAAKA,KAAnB;AADK,UAEGI,SAFH,GAE2DJ,KAF3D,CAEGI,SAFH;AAAA,UAEcS,SAFd,GAE2Db,KAF3D,CAEca,SAFd;AAAA,UAEyBE,KAFzB,GAE2Df,KAF3D,CAEyBe,KAFzB;AAAA,UAEgCV,aAFhC,GAE2DL,KAF3D,CAEgCK,YAFhC;AAAA,UAE8CC,QAF9C,GAE2DN,KAF3D,CAE8CM,QAF9C;AAGL,UAAIU,SAAS,GAAGhB,KAAK,CAACgB,SAAtB;AACA,0BAAQ,gCAAC,kBAAD,CACR;AADQ;AAER,QAAA,YAAY,EAAE,sBAACC,SAAD;AAAA,iBAAed,kBAAkB,CAACC,SAAD,EAAYC,aAAZ,EAA0BC,QAA1B,EAAoCW,SAApC,CAAjC;AAAA;AAFN,SAE2FjB,KAF3F;AAEkG,QAAA,SAAS,EAAE,4BAAWa,SAAX,gCAC7GT,SAD6G,cAChGW,KADgG,GACtF,CAAC,CAACA,KADoF,EAF7G;AAIJ,QAAA,SAAS,EAAEC,SAAS,gBAAG;AAAM,UAAA,SAAS,YAAKZ,SAAL;AAAf,UAAH,GAAuDY;AAJvE,UAKP,KAAKhB,KAAL,CAAWkB,QALJ,CAAR;AAOH;;;;EAZ6BjB,kBAAMC,S;;;AAcxCY,IAAI,CAACf,QAAL,GAAgBoB,gBAAhB;AACAL,IAAI,CAACM,YAAL,GAAoB;AAChBhB,EAAAA,SAAS,EAAE,QADK;AAEhBY,EAAAA,SAAS,EAAE,KAFK;AAGhBK,EAAAA,QAAQ,EAAE,KAHM;AAIhBC,EAAAA,aAAa,EAAEC;AAJC,CAApB","sourcesContent":["import React from 'react';\nimport RcTree, { TreeNode as RcTreeNode } from 'rc-tree';\nimport CaretDownF from '@wind/icons/lib/icons/CaretDownF';\nimport FileO from '@wind/icons/lib/icons/FileO';\nimport LoadingO from '@wind/icons/lib/icons/LoadingO';\nimport PlusSquareO from '@wind/icons/lib/icons/PlusSquareO';\nimport MinusSquareO from '@wind/icons/lib/icons/MinusSquareO';\nimport animation from '../_util/openAnimation';\nimport classNames from 'classnames';\nexport class TreeNode extends React.Component {\n    render() {\n        return <TreeNode {...this.props}/>;\n    }\n}\nexport function renderSwitcherIcon(prefixCls, switcherIcon, showLine, { isLeaf, expanded, loading }) {\n    if (loading) {\n        return <LoadingO className={`${prefixCls}-switcher-loading-icon`}/>;\n    }\n    if (isLeaf) {\n        return showLine ? <FileO className={`${prefixCls}-switcher-line-icon`}/> : null;\n    }\n    const switcherCls = `${prefixCls}-switcher-icon`;\n    if (React.isValidElement(switcherIcon)) {\n        return React.cloneElement(switcherIcon, {\n            className: classNames(switcherIcon.props.className || '', switcherCls),\n        });\n    }\n    if (switcherIcon) {\n        return switcherIcon;\n    }\n    if (showLine) {\n        return expanded ? (<MinusSquareO className={`${prefixCls}-switcher-line-icon f-fs-l`}/>) : (<PlusSquareO className={`${prefixCls}-switcher-line-icon f-fs-l`}/>);\n    }\n    return <CaretDownF className={classNames(switcherCls, 'f-fs')}/>;\n}\n// function getIcon(props: TreeNodeAttribute): React.ReactNode {\n//   const { isLeaf, expanded } = props;\n//   if (isLeaf) {\n//     return <FileO />;\n//   }\n//   // return expanded ? <FolderOpenO /> : <FolderO />;\n//   return null;\n// }\nexport default class Tree extends React.Component {\n    render() {\n        const props = this.props;\n        const { prefixCls, className, theme, switcherIcon, showLine } = props;\n        let checkable = props.checkable;\n        return (<RcTree \n        // icon={getIcon}\n        switcherIcon={(nodeProps) => renderSwitcherIcon(prefixCls, switcherIcon, showLine, nodeProps)} {...props} className={classNames(className, {\n            [`${prefixCls}-${theme}`]: !!theme\n        })} checkable={checkable ? <span className={`${prefixCls}-checkbox-inner`}/> : checkable}>\n        {this.props.children}\n      </RcTree>);\n    }\n}\nTree.TreeNode = RcTreeNode;\nTree.defaultProps = {\n    prefixCls: 'w-tree',\n    checkable: false,\n    showIcon: false,\n    openAnimation: animation,\n};\n"],"file":"index.js"}