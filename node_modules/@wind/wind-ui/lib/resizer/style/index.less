@import "../../style/themes/default";
@import "../../style/mixins/index";

@resizer-prefix-cls: ~"@{ant-prefix}-resizer";

// todo: 是否自动将父元素设置为flex布局？另需要考虑并非所有子元素都收resizer影响(应只考虑相邻元素)

/*todo2: 是否要给相邻元素增加样式？
  1. overflow：hidden/auto , 可能造成不必要的修改，但影响较小
  2. flex-grow/flex-shink , 也许会影响别人的布局思路（除非是布局也是框架的）
  综上，目前觉得不加好。
*/

// .@{resizer-prefix-cls}-parent-e,.@{resizer-prefix-cls}-parent-w {
//   display: flex;
//   flex-direction: row;
//   > div {
//     height: 100%;
//     overflow: auto;
//   }
// }

// .@{resizer-prefix-cls}-parent-n,.@{resizer-prefix-cls}-parent-s {
//   display: flex;
//   flex-direction: column;
// }

// .@{resizer-prefix-cls}-wrapper-e,.@{resizer-prefix-cls}-wrapper-w {
//   display: flex;
//   flex-direction: row;
// }

.@{resizer-prefix-cls} {
  z-index: 99;
  background: #e6e6e6;
  display: flex;
  flex-grow: 0; // 不多占也不被挤压空间
  flex-shrink: 0; // 不多占也不被挤压空间
  overflow: hidden; // 过窄时按钮不超出去
  
  // 相邻元素
  &-sibling {
    overflow: auto; // 默认防止溢出(hidden还是auto?)
  }

  &-n,&-s {
    min-width: 100%;
    height: 10px;
    cursor: n-resize;
    justify-content: center;
    align-items: center;
  }

  &-e,&-w {
    width: 10px;
    min-height: 100%;// 父元素没有高度时"height：100%"反而会导致高度不能撑开，故改为min-height
    cursor: e-resize;
    align-items: center;
    justify-content: center;
  }

  &-button {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    content: '';
    width: 10px;
    height: 112px;
    &-bg { 
      fill:#C5C5C5;
      width: 8px;
      height: 100%;
    }
    &:hover .@{resizer-prefix-cls}-button-bg {
      fill: #999999; 
    }
    &:after {
      content: '';
      display: inline-block;
      position: absolute;
      left: 2px;
      top: 50%;
      margin-top: -6px;
      border: 6px solid transparent;
      border-left-color:#666;
    }

    &-w {
      transform: rotate(180deg);
    }

    &-s {
      transform: rotate(90deg);
    }

    &-n {
      transform: rotate(270deg);
    }
  }

  &-body-dragging-e,&-body-dragging-w {
    cursor: e-resize;
  }

  &-body-dragging-n,&-body-dragging-s {
    cursor: n-resize;
  }
}

/* 暗黑主题 */
.@{resizer-prefix-cls}-dark {
  background: #202026;

  .@{resizer-prefix-cls}-button {
    &-bg {
      fill : #2F2F34;
    }

    &:after {
      border-left-color:#DBDBDB;
    }

    &:hover .@{resizer-prefix-cls}-button-bg {
      fill: #63636D; 
    }
  }
}

.@{resizer-prefix-cls}{
  /* 磁吸式 */
  &-type-magnet {
    background: transparent;
    &.@{resizer-prefix-cls}-w {
      margin-right: -9px;
      margin-left: -1px;
      &:not(.@{resizer-prefix-cls}-folded) {
        .@{resizer-prefix-cls}-button-bg {
          transform: rotate(180deg);
        }
      }
    }

    &.@{resizer-prefix-cls}-e {
      margin-right: -1px;
      margin-left: -9px;
      &:not(.@{resizer-prefix-cls}-folded) {
        .@{resizer-prefix-cls}-button-bg {
          transform: rotate(180deg);
        }
      }
    }

    &.@{resizer-prefix-cls}-n {
      margin-top: -1px;
      margin-bottom: -9px;
      &:not(.@{resizer-prefix-cls}-folded) {
        .@{resizer-prefix-cls}-button-bg {
          transform: rotate(180deg);
        }
      }
    }

    &.@{resizer-prefix-cls}-s {
      margin-top: -9px;
      margin-bottom: -1px;
      &:not(.@{resizer-prefix-cls}-folded) {
        .@{resizer-prefix-cls}-button-bg {
          transform: rotate(180deg);
        }
      }
    }
  }

  // &-type-magnet {
  //   background: transparent;
  //   &.@{resizer-prefix-cls}-pos-left {
  //     margin-right: -9px;
  //     margin-left: -1px;
  //     &.@{resizer-prefix-cls}-w:not(.@{resizer-prefix-cls}-folded),
  //     &.@{resizer-prefix-cls}-e.@{resizer-prefix-cls}-folded {
  //       .@{resizer-prefix-cls}-button-bg {
  //         transform: rotate(180deg);
  //       }
  //     }
  //   }

  //   &.@{resizer-prefix-cls}-pos-right {
  //     margin-right: -1px;
  //     margin-left: -9px;
  //     &.@{resizer-prefix-cls}-e:not(.@{resizer-prefix-cls}-folded),
  //     &.@{resizer-prefix-cls}-w.@{resizer-prefix-cls}-folded {
  //       .@{resizer-prefix-cls}-button-bg {
  //         transform: rotate(180deg);
  //       }
  //     }
  //   }

  //   &.@{resizer-prefix-cls}-pos-top {
  //     margin-top: -1px;
  //     margin-bottom: -9px;
  //     &.@{resizer-prefix-cls}-n:not(.@{resizer-prefix-cls}-folded),
  //     &.@{resizer-prefix-cls}-s.@{resizer-prefix-cls}-folded {
  //       .@{resizer-prefix-cls}-button-bg {
  //         transform: rotate(180deg);
  //       }
  //     }
  //   }

  //   &.@{resizer-prefix-cls}-pos-bottom {
  //     margin-top: -9px;
  //     margin-bottom: -1px;
  //     &.@{resizer-prefix-cls}-s:not(.@{resizer-prefix-cls}-folded),
  //     &.@{resizer-prefix-cls}-n.@{resizer-prefix-cls}-folded {
  //       .@{resizer-prefix-cls}-button-bg {
  //         transform: rotate(180deg);
  //       }
  //     }
  //   }
  // }
}

.@{resizer-prefix-cls}-placeholder {
  z-index: 9999;
  background: #c5c5c5;
  width: 2px;
  height: 2px;
  position: absolute;
}

// .@{resizer-prefix-cls}.react-draggable-dragging {
//   z-index: 9999 !important;
//   background: #c5c5c5;
//   // opacity: 0.6;
//   width: 2px;
//   overflow: hidden;
//   .@{resizer-prefix-cls}-button {
//     display: none;
//   }
// }

.w-resizer-body-dragging {
  user-select: none;
  // pointer-events: none; // 导致cursor失效
  /* 相邻的元素不要触发事件 */
  .@{resizer-prefix-cls}-sibling {
    user-select: none;
    pointer-events: none;
  }
}