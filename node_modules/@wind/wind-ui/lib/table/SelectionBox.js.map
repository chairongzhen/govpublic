{"version":3,"sources":["table/SelectionBox.jsx"],"names":["SelectionBox","props","state","checked","getCheckState","subscribe","unsubscribe","store","setState","defaultSelection","rowIndex","getState","selectionDirty","selectedRowKeys","indexOf","type","disabled","onChange","React","Component"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;IACqBA,Y;;;;;AACjB,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,MAAKC,aAAL,CAAmBH,KAAnB;AADA,KAAb;AAFe;AAKlB;;;;wCACmB;AAChB,WAAKI,SAAL;AACH;;;2CACsB;AACnB,UAAI,KAAKC,WAAT,EAAsB;AAClB,aAAKA,WAAL;AACH;AACJ;;;gCACW;AAAA;;AAAA,UACAC,KADA,GACU,KAAKN,KADf,CACAM,KADA;AAER,WAAKD,WAAL,GAAmBC,KAAK,CAACF,SAAN,CAAgB,YAAM;AACrC,YAAMF,OAAO,GAAG,MAAI,CAACC,aAAL,CAAmB,MAAI,CAACH,KAAxB,CAAhB;;AACA,QAAA,MAAI,CAACO,QAAL,CAAc;AAAEL,UAAAA,OAAO,EAAPA;AAAF,SAAd;AACH,OAHkB,CAAnB;AAIH;;;kCACaF,K,EAAO;AAAA,UACTM,KADS,GAC6BN,KAD7B,CACTM,KADS;AAAA,UACFE,gBADE,GAC6BR,KAD7B,CACFQ,gBADE;AAAA,UACgBC,QADhB,GAC6BT,KAD7B,CACgBS,QADhB;AAEjB,UAAIP,OAAO,GAAG,KAAd;;AACA,UAAII,KAAK,CAACI,QAAN,GAAiBC,cAArB,EAAqC;AACjCT,QAAAA,OAAO,GAAGI,KAAK,CAACI,QAAN,GAAiBE,eAAjB,CAAiCC,OAAjC,CAAyCJ,QAAzC,KAAsD,CAAhE;AACH,OAFD,MAGK;AACDP,QAAAA,OAAO,GAAII,KAAK,CAACI,QAAN,GAAiBE,eAAjB,CAAiCC,OAAjC,CAAyCJ,QAAzC,KAAsD,CAAtD,IACPD,gBAAgB,CAACK,OAAjB,CAAyBJ,QAAzB,KAAsC,CAD1C;AAEH;;AACD,aAAOP,OAAP;AACH;;;6BACQ;AAAA,wBAC0C,KAAKF,KAD/C;AAAA,UACGc,IADH,eACGA,IADH;AAAA,UACSL,QADT,eACSA,QADT;AAAA,UACmBM,QADnB,eACmBA,QADnB;AAAA,UAC6BC,QAD7B,eAC6BA,QAD7B;AAAA,UAEGd,OAFH,GAEe,KAAKD,KAFpB,CAEGC,OAFH;;AAGL,UAAIY,IAAI,KAAK,OAAb,EAAsB;AAClB,4BAAQ,gCAAC,iBAAD;AAAO,UAAA,QAAQ,EAAEC,QAAjB;AAA2B,UAAA,QAAQ,EAAEC,QAArC;AAA+C,UAAA,KAAK,EAAEP,QAAtD;AAAgE,UAAA,OAAO,EAAEP;AAAzE,UAAR;AACH;;AACD,0BAAQ,gCAAC,oBAAD;AAAU,QAAA,OAAO,EAAEA,OAAnB;AAA4B,QAAA,QAAQ,EAAEa,QAAtC;AAAgD,QAAA,QAAQ,EAAEC;AAA1D,QAAR;AACH;;;;EAzCqCC,kBAAMC,S","sourcesContent":["import React from 'react';\nimport Checkbox from '../checkbox';\nimport Radio from '../radio';\nexport default class SelectionBox extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            checked: this.getCheckState(props),\n        };\n    }\n    componentDidMount() {\n        this.subscribe();\n    }\n    componentWillUnmount() {\n        if (this.unsubscribe) {\n            this.unsubscribe();\n        }\n    }\n    subscribe() {\n        const { store } = this.props;\n        this.unsubscribe = store.subscribe(() => {\n            const checked = this.getCheckState(this.props);\n            this.setState({ checked });\n        });\n    }\n    getCheckState(props) {\n        const { store, defaultSelection, rowIndex } = props;\n        let checked = false;\n        if (store.getState().selectionDirty) {\n            checked = store.getState().selectedRowKeys.indexOf(rowIndex) >= 0;\n        }\n        else {\n            checked = (store.getState().selectedRowKeys.indexOf(rowIndex) >= 0 ||\n                defaultSelection.indexOf(rowIndex) >= 0);\n        }\n        return checked;\n    }\n    render() {\n        const { type, rowIndex, disabled, onChange } = this.props;\n        const { checked } = this.state;\n        if (type === 'radio') {\n            return (<Radio disabled={disabled} onChange={onChange} value={rowIndex} checked={checked}/>);\n        }\n        return (<Checkbox checked={checked} disabled={disabled} onChange={onChange}/>);\n    }\n}\n"],"file":"SelectionBox.js"}