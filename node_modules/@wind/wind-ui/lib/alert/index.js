"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _reactDom = _interopRequireDefault(require("react-dom"));

var _rcAnimate = _interopRequireDefault(require("rc-animate"));

var _classnames = _interopRequireDefault(require("classnames"));

var _CloseO = _interopRequireDefault(require("@wind/icons/lib/icons/CloseO"));

var _InfoCircleF = _interopRequireDefault(require("@wind/icons/lib/icons/InfoCircleF"));

var _InfoCircleO = _interopRequireDefault(require("@wind/icons/lib/icons/InfoCircleO"));

var _CheckCircleF = _interopRequireDefault(require("@wind/icons/lib/icons/CheckCircleF"));

var _CloseCircleF = _interopRequireDefault(require("@wind/icons/lib/icons/CloseCircleF"));

var _CloseCircleO = _interopRequireDefault(require("@wind/icons/lib/icons/CloseCircleO"));

var _ExclamationCircleO = _interopRequireDefault(require("@wind/icons/lib/icons/ExclamationCircleO"));

var _ExclamationCircleF = _interopRequireDefault(require("@wind/icons/lib/icons/ExclamationCircleF"));

var _CheckCircleO = _interopRequireDefault(require("@wind/icons/lib/icons/CheckCircleO"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function noop() {}

var Alert = /*#__PURE__*/function (_React$Component) {
  _inherits(Alert, _React$Component);

  var _super = _createSuper(Alert);

  function Alert(props) {
    var _this;

    _classCallCheck(this, Alert);

    _this = _super.call(this, props);

    _this.handleClose = function (e) {
      e.preventDefault();

      var dom = _reactDom["default"].findDOMNode(_assertThisInitialized(_this));

      dom.style.height = "".concat(dom.offsetHeight, "px"); // Magic code
      // 重复一次后才能正确设置 height

      dom.style.height = "".concat(dom.offsetHeight, "px");

      _this.setState({
        closing: false
      });

      (_this.props.onClose || noop)(e);
    };

    _this.animationEnd = function () {
      _this.setState({
        closed: true,
        closing: true
      });
    };

    _this.state = {
      closing: true,
      closed: false
    };
    return _this;
  }

  _createClass(Alert, [{
    key: "render",
    value: function render() {
      var _classNames;

      var _this$props = this.props,
          closable = _this$props.closable,
          description = _this$props.description,
          type = _this$props.type,
          _this$props$prefixCls = _this$props.prefixCls,
          prefixCls = _this$props$prefixCls === void 0 ? 'w-alert' : _this$props$prefixCls,
          message = _this$props.message,
          closeText = _this$props.closeText,
          showIcon = _this$props.showIcon,
          banner = _this$props.banner,
          _this$props$className = _this$props.className,
          className = _this$props$className === void 0 ? '' : _this$props$className,
          style = _this$props.style; // banner模式默认有 Icon

      showIcon = banner && showIcon === undefined ? true : showIcon; // banner模式默认为警告

      type = banner && type === undefined ? 'warning' : type || 'info';
      var AlertIcon; // use outline icon in alert with description

      var isO = !!description;

      switch (type) {
        case 'success':
          AlertIcon = isO ? _CheckCircleO["default"] : _CheckCircleF["default"];
          break;

        case 'error':
          AlertIcon = isO ? _CloseCircleO["default"] : _CloseCircleF["default"];
          break;

        case 'warning':
          AlertIcon = isO ? _ExclamationCircleO["default"] : _ExclamationCircleF["default"];
          break;

        case 'info':
        default:
          AlertIcon = isO ? _InfoCircleO["default"] : _InfoCircleF["default"];
          break;
      }

      var alertCls = (0, _classnames["default"])(prefixCls, (_classNames = {}, _defineProperty(_classNames, "".concat(prefixCls, "-").concat(type), true), _defineProperty(_classNames, "".concat(prefixCls, "-close"), !this.state.closing), _defineProperty(_classNames, "".concat(prefixCls, "-with-description"), !!description), _defineProperty(_classNames, "".concat(prefixCls, "-no-icon"), !showIcon), _defineProperty(_classNames, "".concat(prefixCls, "-banner"), !!banner), _classNames), className); // closeable when closeText is assigned

      if (closeText) {
        closable = true;
      }

      var closeIcon = closable ? /*#__PURE__*/_react["default"].createElement("a", {
        onClick: this.handleClose,
        className: "".concat(prefixCls, "-close-icon")
      }, closeText || /*#__PURE__*/_react["default"].createElement(_CloseO["default"], null)) : null;
      return this.state.closed ? null : /*#__PURE__*/_react["default"].createElement(_rcAnimate["default"], {
        component: "",
        showProp: "data-show",
        transitionName: "".concat(prefixCls, "-slide-up"),
        onEnd: this.animationEnd
      }, /*#__PURE__*/_react["default"].createElement("div", {
        "data-show": this.state.closing,
        className: alertCls,
        style: style
      }, showIcon ? /*#__PURE__*/_react["default"].createElement(AlertIcon, {
        className: "".concat(prefixCls, "-icon")
      }) : null, /*#__PURE__*/_react["default"].createElement("span", {
        className: "".concat(prefixCls, "-message")
      }, message), /*#__PURE__*/_react["default"].createElement("span", {
        className: "".concat(prefixCls, "-description")
      }, description), closeIcon));
    }
  }]);

  return Alert;
}(_react["default"].Component);

exports["default"] = Alert;
//# sourceMappingURL=index.js.map
